// ============================================================================
// BELLEZA EST√âTICA - PRISMA SCHEMA v3.0 - PRODUCTION READY ‚úÖ
// ============================================================================

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ============================================================================
// ‚úÖ ENUMS PARA CLASIFICACI√ìN LEGAL Y FUNCIONAL
// ============================================================================

enum TreatmentRiskLevel {
  LOW       // Grupo A - Sin consulta previa obligatoria
  MEDIUM    // Grupo B - Consulta recomendada  
  HIGH      // Grupo B - Consulta obligatoria
  MEDICAL   // Grupo C - Solo personal m√©dico
}

enum ConsentType {
  SIMPLE    // Consentimiento b√°sico
  INFORMED  // Consentimiento informado
  MEDICAL   // Consentimiento m√©dico detallado
}

enum AppointmentType {
  DIRECT                // Reserva directa
  CONSULTATION_ONLY     // Solo consulta
  CONSULTATION_TREATMENT // Consulta + Tratamiento el mismo d√≠a
  CONSULTATION_SEPARATE  // Consulta previa obligatoria en cita separada
}

enum AppointmentStatus {
  PENDING      // Pendiente de confirmaci√≥n
  CONFIRMED    // Confirmada
  IN_PROGRESS  // En progreso
  COMPLETED    // Completada
  CANCELLED    // Cancelada
  NO_SHOW      // No se present√≥
  RESCHEDULED  // Reprogramada
}

enum UserRole {
  CLIENT          // Cliente regular
  VIP_CLIENT      // Cliente VIP
  PROFESSIONAL    // Profesional
  MANAGER         // Manager de cl√≠nica
  ADMIN           // Administrador del sistema
}

enum PaymentStatus {
  PENDING           // Pendiente
  PROCESSING        // Procesando
  COMPLETED         // Completado
  FAILED            // Fallido
  CANCELLED         // Cancelado
  REFUNDED          // Reembolsado
  PARTIALLY_REFUNDED // Parcialmente reembolsado
}

enum NotificationType {
  APPOINTMENT_REMINDER   // Recordatorio de cita
  APPOINTMENT_CONFIRMED  // Cita confirmada
  PROMOTION             // Promoci√≥n
  WELLNESS_TIP          // Consejo de bienestar
  SYSTEM               // Sistema
  BIRTHDAY             // Cumplea√±os
  VIP_OFFER            // Oferta VIP
}

// ============================================================================
// üè• MODELO CL√çNICA - MEJORADO CON COMPLIANCE LEGAL
// ============================================================================

model Clinic {
  id           String  @id @default(cuid())
  name         String  @db.VarChar(100)
  slug         String  @unique @db.VarChar(50)
  email        String  @unique @db.VarChar(100)
  passwordHash String  @map("password_hash") @db.VarChar(255)
  phone        String  @db.VarChar(20)
  address      String  @db.Text
  city         String  @db.VarChar(50)
  postalCode   String? @map("postal_code") @db.VarChar(10)
  country      String  @default("ES") @db.VarChar(2)
  timezone     String  @default("Europe/Madrid") @db.VarChar(50)
  
  // URLs y branding
  logoUrl      String? @map("logo_url") @db.Text
  websiteUrl   String? @map("website_url") @db.Text
  brandColors  String? @map("brand_colors") @db.Text // JSON

  // ‚úÖ CONFIGURACI√ìN LEGAL Y SANITARIA
  medicalLicense       String?  @map("medical_license") @db.VarChar(50)
  healthRegistration   String?  @map("health_registration") @db.VarChar(50)
  autonomousCommunity  String?  @map("autonomous_community") @db.VarChar(50)
  taxId                String?  @map("tax_id") @db.VarChar(20) // CIF
  legalCompliance      String?  @map("legal_compliance") @db.Text // JSON
  
  // ‚úÖ CONFIGURACI√ìN DE CONSENTIMIENTOS
  defaultConsentPolicy String?  @map("default_consent_policy") @db.Text // JSON
  requiresDigitalSignature Boolean @default(false) @map("requires_digital_signature")
  
  // ‚úÖ CONFIGURACI√ìN DE TRATAMIENTOS
  allowsDirectBookingHighRisk Boolean @default(false) @map("allows_direct_booking_high_risk")
  consultationMinimumTime     Int?    @map("consultation_minimum_time") // minutos
  maxAdvanceBookingDays       Int     @default(90) @map("max_advance_booking_days")

  // Configuraci√≥n de negocio
  businessHours         String    @map("business_hours") @db.Text // JSON
  subscriptionPlan      String    @default("FREE") @map("subscription_plan") @db.VarChar(20)
  subscriptionExpiresAt DateTime? @map("subscription_expires_at")
  maxProfessionals      Int       @default(2) @map("max_professionals")
  maxPatients           Int       @default(100) @map("max_patients")

  // Configuraci√≥n de features
  enableVipProgram      Boolean @default(true) @map("enable_vip_program")
  enableNotifications   Boolean @default(true) @map("enable_notifications")
  enableOnlineBooking   Boolean @default(true) @map("enable_online_booking")
  enablePayments        Boolean @default(false) @map("enable_payments")
  enableLoyaltyProgram  Boolean @default(true) @map("enable_loyalty_program")

  // Estados y verificaci√≥n
  isActive            Boolean @default(true) @map("is_active")
  isVerified          Boolean @default(false) @map("is_verified")
  onboardingCompleted Boolean @default(false) @map("onboarding_completed")
  emailVerified       Boolean @default(false) @map("email_verified")

  // Configuraci√≥n adicional
  settings  String? @db.Text // JSON configuraciones adicionales
  metadata  String? @db.Text // JSON metadata adicional

  // Timestamps
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  lastLoginAt DateTime? @map("last_login_at")

  // Relaciones
  professionals        Professional[]
  users               User[]
  treatments          Treatment[]
  appointments        Appointment[]
  rewardTemplates     RewardTemplate[]
  offers              Offer[]
  consentFormTemplates ConsentFormTemplate[]
  wellnessTips        WellnessTip[]
  regionalConfig      RegionalConfig?

  @@index([slug], map: "idx_clinic_slug")
  @@index([city, isActive], map: "idx_clinic_location")
  @@index([subscriptionPlan, subscriptionExpiresAt], map: "idx_clinic_subscription")
  @@index([isActive, isVerified], map: "idx_clinic_status")
  @@map("clinics")
}

// ============================================================================
// üåç CONFIGURACI√ìN REGIONAL POR COMUNIDAD AUT√ìNOMA
// ============================================================================

model RegionalConfig {
  id                   String @id @default(cuid())
  clinicId             String @unique @map("clinic_id")
  autonomousCommunity  String @map("autonomous_community") @db.VarChar(50)
  
  // Configuraciones espec√≠ficas por regi√≥n
  requiresMedicalLicense      Boolean @default(false) @map("requires_medical_license")
  highRiskRequiresDoctor      Boolean @default(true) @map("high_risk_requires_doctor")
  mandatoryConsentTypes       String  @default("[]") @map("mandatory_consent_types") @db.Text // JSON
  minimumConsultationTime     Int?    @map("minimum_consultation_time")
  
  // Regulaciones espec√≠ficas
  allowedTreatmentTypes       String  @default("[]") @map("allowed_treatment_types") @db.Text // JSON
  restrictedTreatmentTypes    String  @default("[]") @map("restricted_treatment_types") @db.Text // JSON
  
  // Documentaci√≥n requerida
  requiredDocumentation       String  @default("[]") @map("required_documentation") @db.Text // JSON
  specialRequirements         String? @map("special_requirements") @db.Text
  
  // Configuraci√≥n de horarios
  restrictedHours             String? @map("restricted_hours") @db.Text // JSON
  mandatoryBreaks             String? @map("mandatory_breaks") @db.Text // JSON
  
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
  // Relaciones
  clinic Clinic @relation(fields: [clinicId], references: [id], onDelete: Cascade)
  
  @@index([autonomousCommunity], map: "idx_regional_config_community")
  @@map("regional_configs")
}

// ============================================================================
// üë• MODELO USER - MEJORADO CON INFORMACI√ìN M√âDICA COMPLETA
// ============================================================================

model User {
  id           String    @id @default(cuid())
  email        String    @unique @db.VarChar(100)
  passwordHash String    @map("password_hash") @db.VarChar(255)
  firstName    String    @map("first_name") @db.VarChar(50)
  lastName     String    @map("last_name") @db.VarChar(50)
  phone        String?   @db.VarChar(20)
  avatarUrl    String?   @map("avatar_url") @db.Text
  birthDate    DateTime? @map("birth_date") @db.Date
  gender       String?   @db.VarChar(20) // F, M, Other, PreferNotToSay

  // Cl√≠nica principal
  primaryClinicId String @map("primary_clinic_id")
  
  // Role y permisos
  role         UserRole @default(CLIENT)
  permissions  String   @default("[]") @db.Text // JSON array

  // ‚úÖ INFORMACI√ìN M√âDICA PARA COMPLIANCE
  hasAllergies         Boolean? @map("has_allergies")
  allergyDetails       String?  @map("allergy_details") @db.Text // JSON
  hasMedicalConditions Boolean? @map("has_medical_conditions")
  medicalDetails       String?  @map("medical_details") @db.Text // JSON
  takingMedications    Boolean? @map("taking_medications")
  medicationDetails    String?  @map("medication_details") @db.Text // JSON
  emergencyContact     String?  @map("emergency_contact") @db.Text // JSON
  
  // ‚úÖ CONSENTIMIENTOS Y GDPR
  generalConsentDate    DateTime? @map("general_consent_date")
  marketingConsentDate  DateTime? @map("marketing_consent_date")
  dataProcessingConsent Boolean   @default(false) @map("data_processing_consent")
  gdprAcceptedAt        DateTime? @map("gdpr_accepted_at")
  
  // Informaci√≥n est√©tica
  skinType             String? @map("skin_type") @db.VarChar(20)
  treatmentPreferences String? @map("treatment_preferences") @db.Text // JSON
  beautyGoals          String? @map("beauty_goals") @db.Text // JSON

  // ‚úÖ GAMIFICACI√ìN MEJORADA
  beautyPoints      Int     @default(0) @map("beauty_points")
  totalInvestment   Decimal @default(0) @map("total_investment") @db.Decimal(10,2)
  sessionsCompleted Int     @default(0) @map("sessions_completed")
  loyaltyTier       String  @default("BRONZE") @map("loyalty_tier") @db.VarChar(20)
  vipStatus         Boolean @default(false) @map("vip_status")
  vipSince          DateTime? @map("vip_since")
  
  // M√©tricas de engagement
  totalAppointments   Int @default(0) @map("total_appointments")
  cancelledAppointments Int @default(0) @map("cancelled_appointments")
  noShowCount         Int @default(0) @map("no_show_count")
  averageRating       Decimal? @map("average_rating") @db.Decimal(3,2)

  // ‚úÖ CONFIGURACI√ìN DE NOTIFICACIONES MEJORADA
  pushToken              String?   @map("push_token") @db.Text
  devicePlatform         String?   @map("device_platform") @db.VarChar(20)
  deviceInfo             String?   @map("device_info") @db.Text // JSON
  pushSettings           String?   @map("push_settings") @db.Text // JSON
  emailNotifications     Boolean   @default(true) @map("email_notifications")
  smsNotifications       Boolean   @default(false) @map("sms_notifications")
  marketingNotifications Boolean   @default(true) @map("marketing_notifications")
  reminderPreference     String    @default("24h") @map("reminder_preference") @db.VarChar(10)
  lastNotificationSent   DateTime? @map("last_notification_sent")

  // Estados y seguridad
  isActive    Boolean   @default(true) @map("is_active")
  isVerified  Boolean   @default(false) @map("is_verified")
  isBlocked   Boolean   @default(false) @map("is_blocked")
  blockReason String?   @map("block_reason") @db.Text
  lastLoginAt DateTime? @map("last_login_at")
  loginAttempts Int     @default(0) @map("login_attempts")
  lockedUntil DateTime? @map("locked_until")

  // Referidos y marketing
  referralCode        String? @unique @map("referral_code") @db.VarChar(20)
  referredBy          String? @map("referred_by") @db.VarChar(20)
  onboardingCompleted Boolean @default(false) @map("onboarding_completed")
  privacyAccepted     Boolean @default(false) @map("privacy_accepted")
  termsAccepted       Boolean @default(false) @map("terms_accepted")
  marketingAccepted   Boolean @default(false) @map("marketing_accepted")

  // Preferencias de la app
  preferredLanguage   String @default("es") @map("preferred_language") @db.VarChar(5)
  preferredCurrency   String @default("EUR") @map("preferred_currency") @db.VarChar(3)
  timezone           String @default("Europe/Madrid") @db.VarChar(50)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relaciones
  primaryClinic       Clinic               @relation(fields: [primaryClinicId], references: [id])
  appointments        Appointment[]
  vipSubscriptions    VipSubscription[]
  invitations         Invitation[]
  passwordResetTokens PasswordResetToken[]
  rewardRedemptions   RewardRedemption[]
  stripeCustomer      StripeCustomer?
  paymentMethods      PaymentMethod[]
  payments            Payment[]
  notificationLogs    NotificationLog[]
  offerRedemptions    OfferRedemption[]
  userSessions        UserSession[]
  patientConsents     PatientConsent[]
  consentHistory      ConsentHistory[]
  appointmentReviews  AppointmentReview[] @relation("UserReviews")

  @@index([primaryClinicId, isActive], map: "idx_user_clinic")
  @@index([email], map: "idx_user_email")
  @@index([loyaltyTier, vipStatus], map: "idx_user_loyalty")
  @@index([referralCode], map: "idx_user_referral")
  @@index([role, isActive], map: "idx_user_role")
  @@index([beautyPoints], map: "idx_user_points")
  @@map("users")
}

// ============================================================================
// üë®‚Äç‚öïÔ∏è MODELO PROFESSIONAL - MEJORADO CON AUTENTICACI√ìN COMPLETA
// ============================================================================

model Professional {
  id       String @id @default(cuid())
  clinicId String @map("clinic_id")

  // Autenticaci√≥n
  email        String   @unique @db.VarChar(100)
  passwordHash String   @map("password_hash") @db.VarChar(255)
  role         UserRole @default(PROFESSIONAL)

  // Datos personales
  firstName String  @map("first_name") @db.VarChar(50)
  lastName  String  @map("last_name") @db.VarChar(50)
  phone     String? @db.VarChar(20)
  avatarUrl String? @map("avatar_url") @db.Text
  birthDate DateTime? @map("birth_date") @db.Date

  // Datos profesionales
  licenseNumber  String? @map("license_number") @db.VarChar(50)
  specialties    String  @db.Text // JSON array de especialidades
  certifications String? @db.Text // JSON array de certificaciones
  experience     Int?    // A√±os de experiencia
  bio            String? @db.Text
  languages      String? @db.Text // JSON array de idiomas
  education      String? @db.Text // JSON formaci√≥n acad√©mica

  // Configuraci√≥n laboral
  employmentType String  @default("FULL_TIME") @map("employment_type") @db.VarChar(20)
  hourlyRate     Decimal? @map("hourly_rate") @db.Decimal(8,2)
  commissionRate Decimal? @map("commission_rate") @db.Decimal(5,2)
  availableHours String? @map("available_hours") @db.Text // JSON
  workingDays    String? @map("working_days") @db.Text // JSON

  // ‚úÖ PERFORMANCE Y M√âTRICAS MEJORADAS
  rating              Decimal @default(5.0) @db.Decimal(3,2)
  totalAppointments   Int     @default(0) @map("total_appointments")
  totalRevenue        Decimal @default(0) @map("total_revenue") @db.Decimal(10,2)
  patientSatisfaction Decimal @default(5.0) @map("patient_satisfaction") @db.Decimal(3,2)
  onTimePercentage    Decimal @default(100) @map("on_time_percentage") @db.Decimal(5,2)
  cancellationRate    Decimal @default(0) @map("cancellation_rate") @db.Decimal(5,2)

  // Permisos y accesos
  permissions         String  @default("[]") @db.Text // JSON array
  canManageSchedule   Boolean @default(true) @map("can_manage_schedule")
  canViewReports      Boolean @default(false) @map("can_view_reports")
  canManagePatients   Boolean @default(false) @map("can_manage_patients")
  canManageTreatments Boolean @default(false) @map("can_manage_treatments")
  canProcessPayments  Boolean @default(false) @map("can_process_payments")

  // Estados
  isActive            Boolean   @default(true) @map("is_active")
  isVerified          Boolean   @default(false) @map("is_verified")
  onboardingCompleted Boolean   @default(false) @map("onboarding_completed")
  lastLoginAt         DateTime? @map("last_login_at")
  emailVerified       Boolean   @default(false) @map("email_verified")

  // Configuraci√≥n personal
  notificationSettings String? @map("notification_settings") @db.Text // JSON
  workPreferences     String? @map("work_preferences") @db.Text // JSON

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relaciones
  clinic              Clinic                      @relation(fields: [clinicId], references: [id], onDelete: Cascade)
  appointments        Appointment[]
  passwordResetTokens ProfessionalPasswordReset[]
  userSessions        UserSession[]
  appointmentReviews  AppointmentReview[] @relation("ProfessionalReviews")

  @@index([clinicId, isActive], map: "idx_professional_clinic")
  @@index([email], map: "idx_professional_email")
  @@index([role, clinicId], map: "idx_professional_role")
  @@index([rating, totalAppointments], map: "idx_professional_performance")
  @@map("professionals")
}

// ============================================================================
// ‚úÖ SISTEMA DE CONSENTIMIENTOS MEJORADO
// ============================================================================

model ConsentFormTemplate {
  id       String @id @default(cuid())
  clinicId String @map("clinic_id")

  // Informaci√≥n b√°sica
  name        String @db.VarChar(100)
  description String? @db.Text
  version     String @default("1.0") @db.VarChar(10)
  language    String @default("es") @db.VarChar(5)

  // Contenido del formulario
  title       String @db.VarChar(200)
  content     String @db.Text // HTML del formulario
  fields      String @db.Text // JSON con campos requeridos
  
  // Configuraci√≥n legal
  isActive    Boolean @default(true) @map("is_active")
  isMandatory Boolean @default(false) @map("is_mandatory")
  
  // Tipo de consentimiento
  consentType ConsentType @map("consent_type")
  
  // Validez
  validFrom   DateTime @map("valid_from")
  validUntil  DateTime? @map("valid_until")

  // Configuraci√≥n adicional
  requiresWitness Boolean @default(false) @map("requires_witness")
  requiresParentConsent Boolean @default(false) @map("requires_parent_consent")
  minimumAge  Int? @map("minimum_age")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relaciones
  clinic      Clinic          @relation(fields: [clinicId], references: [id], onDelete: Cascade)
  treatments  Treatment[]
  consents    PatientConsent[]

  @@index([clinicId, isActive], map: "idx_consent_template_clinic")
  @@index([consentType], map: "idx_consent_template_type")
  @@index([validFrom, validUntil], map: "idx_consent_template_validity")
  @@map("consent_form_templates")
}

model PatientConsent {
  id          String @id @default(cuid())
  userId      String @map("user_id")
  treatmentId String? @map("treatment_id")
  templateId  String @map("template_id")
  
  // Informaci√≥n de consentimiento
  isConsented      Boolean   @default(false) @map("is_consented")
  consentedAt      DateTime? @map("consented_at")
  digitalSignature String?   @map("digital_signature") @db.Text
  ipAddress        String?   @map("ip_address") @db.VarChar(45)
  userAgent        String?   @map("user_agent") @db.Text
  
  // Datos del formulario
  formData         String?   @db.Text // JSON con respuestas
  
  // Informaci√≥n m√©dica relevante
  allergies        String?   @db.Text // JSON array
  medications      String?   @db.Text // JSON array
  medicalHistory   String?   @map("medical_history") @db.Text
  
  // Validaci√≥n m√©dica
  reviewedBy       String?   @map("reviewed_by") // Professional ID
  reviewedAt       DateTime? @map("reviewed_at")
  medicalApproval  Boolean?  @map("medical_approval")
  approvalNotes    String?   @map("approval_notes") @db.Text
  
  // Estados
  status           String    @default("PENDING") @db.VarChar(20)
  
  // Validez
  expiresAt        DateTime? @map("expires_at")
  
  // Testigo (si requerido)
  witnessName      String?   @map("witness_name") @db.VarChar(100)
  witnessSignature String?   @map("witness_signature") @db.Text
  
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relaciones
  user      User                 @relation(fields: [userId], references: [id], onDelete: Cascade)
  treatment Treatment?           @relation(fields: [treatmentId], references: [id])
  template  ConsentFormTemplate @relation(fields: [templateId], references: [id])

  @@index([userId, status], map: "idx_patient_consent_user")
  @@index([treatmentId], map: "idx_patient_consent_treatment")
  @@index([status, expiresAt], map: "idx_patient_consent_validity")
  @@map("patient_consents")
}

// ‚úÖ NUEVO: HISTORIAL DE CONSENTIMIENTOS PARA AUDIT
model ConsentHistory {
  id             String   @id @default(cuid())
  userId         String   @map("user_id")
  consentType    String   @map("consent_type") @db.VarChar(50)
  version        String   @default("1.0") @db.VarChar(10)
  
  // Estado del consentimiento
  isConsented    Boolean  @map("is_consented")
  consentedAt    DateTime @map("consented_at")
  revokedAt      DateTime? @map("revoked_at")
  
  // Metadata de trazabilidad
  ipAddress      String?  @map("ip_address") @db.VarChar(45)
  userAgent      String?  @map("user_agent") @db.Text
  method         String   @default("DIGITAL") @db.VarChar(20)
  
  // Evidencia
  digitalSignature String? @map("digital_signature") @db.Text
  witnessId        String? @map("witness_id")
  notes            String? @db.Text
  
  createdAt DateTime @default(now()) @map("created_at")
  
  // Relaciones
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId, consentType], map: "idx_consent_history_user")
  @@index([consentedAt], map: "idx_consent_history_date")
  @@map("consent_history")
}

// ============================================================================
// üíâ MODELO TREATMENT - MEJORADO CON COMPLIANCE LEGAL COMPLETO
// ============================================================================

model Treatment {
  id       String @id @default(cuid())
  clinicId String @map("clinic_id")

  // Informaci√≥n b√°sica
  name             String @db.VarChar(100)
  description      String @db.Text
  shortDescription String? @map("short_description") @db.VarChar(200)
  category         String @db.VarChar(50)
  subcategory      String? @db.VarChar(50)

  // ‚úÖ CLASIFICACI√ìN LEGAL COMPLETA
  riskLevel                TreatmentRiskLevel @default(LOW) @map("risk_level")
  requiresConsultation     Boolean            @default(false) @map("requires_consultation")
  requiresMedicalStaff     Boolean            @default(false) @map("requires_medical_staff")
  consentType              ConsentType        @default(SIMPLE) @map("consent_type")
  regulatoryCategory       String?            @map("regulatory_category") @db.VarChar(50)
  
  // ‚úÖ INFORMACI√ìN LEGAL DETALLADA
  minimumAge               Int?               @map("minimum_age")
  maximumAge               Int?               @map("maximum_age")
  contraindications        String?            @db.Text // JSON array
  sideEffects             String?            @map("side_effects") @db.Text // JSON array
  recoveryTime            String?            @map("recovery_time") @db.VarChar(50)
  followUpRequired        Boolean            @default(false) @map("follow_up_required")
  followUpDays            Int?               @map("follow_up_days")
  
  // ‚úÖ CONSENTIMIENTO INFORMADO
  consentFormRequired     Boolean            @default(false) @map("consent_form_required")
  consentFormTemplateId   String?            @map("consent_form_template_id")
  digitalSignatureRequired Boolean           @default(false) @map("digital_signature_required")
  
  // ‚úÖ CONFIGURACI√ìN DE RESERVA
  appointmentType         AppointmentType    @default(DIRECT) @map("appointment_type")
  consultationDuration    Int?               @map("consultation_duration")
  allowSameDayConsultation Boolean           @default(true) @map("allow_same_day_consultation")
  
  // ‚úÖ PROFESIONALES AUTORIZADOS
  authorizedProfessionalTypes String?        @map("authorized_professional_types") @db.Text // JSON
  requiresSpecialization  Boolean            @default(false) @map("requires_specialization")
  requiredCertifications  String?            @map("required_certifications") @db.Text // JSON

  // Duraci√≥n y precios
  durationMinutes Int     @map("duration_minutes")
  price           Decimal @db.Decimal(8,2)
  vipPrice        Decimal? @map("vip_price") @db.Decimal(8,2)
  preparationTime Int     @default(0) @map("preparation_time")
  cleanupTime     Int     @default(0) @map("cleanup_time")

  // Configuraci√≥n visual
  iconName String  @map("icon_name") @db.VarChar(50)
  color    String? @db.VarChar(7) // Hex color
  imageUrl String? @map("image_url") @db.Text
  gallery  String? @db.Text // JSON array de URLs

  // Configuraci√≥n de negocio
  isVipExclusive       Boolean @default(false) @map("is_vip_exclusive")
  maxSessionsPerMonth  Int?    @map("max_sessions_per_month")
  beautyPointsEarned   Int     @default(10) @map("beauty_points_earned")
  commissionRate       Decimal? @map("commission_rate") @db.Decimal(5,2)

  // Estados
  isActive   Boolean @default(true) @map("is_active")
  isFeatured Boolean @default(false) @map("is_featured")
  isPopular  Boolean @default(false) @map("is_popular")
  isNew      Boolean @default(false) @map("is_new")
  isArchived Boolean @default(false) @map("is_archived")

  // SEO y marketing
  tags           String? @db.Text // JSON array
  seoTitle       String? @map("seo_title") @db.VarChar(200)
  seoDescription String? @map("seo_description") @db.Text
  sortOrder      Int     @default(0) @map("sort_order")

  // Analytics
  totalBookings  Int @default(0) @map("total_bookings")
  avgRating      Decimal? @map("avg_rating") @db.Decimal(3,2)
  viewCount      Int @default(0) @map("view_count")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relaciones
  clinic               Clinic               @relation(fields: [clinicId], references: [id], onDelete: Cascade)
  appointments         Appointment[]
  consentFormTemplate  ConsentFormTemplate? @relation(fields: [consentFormTemplateId], references: [id])
  patientConsents      PatientConsent[]
  appointmentReviews   AppointmentReview[] @relation("TreatmentReviews")

  @@index([clinicId, isActive], map: "idx_treatment_clinic")
  @@index([category, isActive], map: "idx_treatment_category")
  @@index([riskLevel, requiresConsultation], map: "idx_treatment_legal")
  @@index([isVipExclusive, isFeatured], map: "idx_treatment_special")
  @@index([price, isActive], map: "idx_treatment_price")
  @@map("treatments")
}

// ============================================================================
// üìÖ MODELO APPOINTMENT - MEJORADO PARA LEGAL COMPLIANCE COMPLETO
// ============================================================================

model Appointment {
  id String @id @default(cuid())

  // Referencias principales
  userId         String @map("user_id")
  clinicId       String @map("clinic_id")
  professionalId String @map("professional_id")
  treatmentId    String @map("treatment_id")

  // ‚úÖ INFORMACI√ìN LEGAL MEJORADA
  appointmentType      AppointmentType @default(DIRECT) @map("appointment_type")
  isConsultationOnly   Boolean         @default(false) @map("is_consultation_only")
  consultationRequired Boolean         @default(false) @map("consultation_required")
  consentStatus        String?         @map("consent_status") @db.VarChar(20)
  consentFormId        String?         @map("consent_form_id")
  
  // ‚úÖ VALIDACI√ìN M√âDICA
  medicalClearance     Boolean?        @map("medical_clearance")
  clearanceProvidedBy  String?         @map("clearance_provided_by")
  clearanceNotes       String?         @map("clearance_notes") @db.Text
  clearanceDate        DateTime?       @map("clearance_date")

  // Programaci√≥n mejorada
  scheduledDate DateTime @map("scheduled_date") @db.Date
  scheduledTime DateTime @map("scheduled_time")
  endTime       DateTime @map("end_time")
  timezone      String   @default("Europe/Madrid") @db.VarChar(50)
  
  // Buffer times
  arrivalTime   DateTime? @map("arrival_time")
  checkinTime   DateTime? @map("checkin_time")
  
  // Configuraci√≥n
  durationMinutes Int               @map("duration_minutes")
  status          AppointmentStatus @default(PENDING)
  priority        String            @default("NORMAL") @db.VarChar(10)

  // Informaci√≥n adicional
  notes             String? @db.Text
  professionalNotes String? @map("professional_notes") @db.Text
  internalNotes     String? @map("internal_notes") @db.Text
  cancelReason      String? @map("cancel_reason") @db.Text
  rescheduleReason  String? @map("reschedule_reason") @db.Text
  
  // Informaci√≥n del paciente en la cita
  patientCondition  String? @map("patient_condition") @db.Text
  treatmentNotes    String? @map("treatment_notes") @db.Text
  
  // Facturaci√≥n y puntos mejorados
  originalPrice      Decimal @map("original_price") @db.Decimal(8,2)
  finalPrice         Decimal @map("final_price") @db.Decimal(8,2)
  discountApplied    Decimal @default(0) @map("discount_applied") @db.Decimal(8,2)
  taxAmount          Decimal @default(0) @map("tax_amount") @db.Decimal(8,2)
  beautyPointsEarned Int     @default(0) @map("beauty_points_earned")
  beautyPointsUsed   Int     @default(0) @map("beauty_points_used")
  
  // Descuentos y ofertas aplicadas
  offersApplied      String? @map("offers_applied") @db.Text // JSON array de ofertas
  promoCode          String? @map("promo_code") @db.VarChar(20)

  // Recordatorios y notificaciones
  reminderSent     Boolean @default(false) @map("reminder_sent")
  confirmationSent Boolean @default(false) @map("confirmation_sent")
  followUpSent     Boolean @default(false) @map("follow_up_sent")
  reviewRequested  Boolean @default(false) @map("review_requested")

  // Metadata del booking
  bookingSource    String  @default("APP") @map("booking_source") @db.VarChar(20)
  isFirstVisit     Boolean @default(false) @map("is_first_visit")
  isRescheduled    Boolean @default(false) @map("is_rescheduled")
  rescheduleCount  Int     @default(0) @map("reschedule_count")
  
  // Informaci√≥n de pago
  paymentStatus    PaymentStatus? @map("payment_status")
  paymentMethod    String?        @map("payment_method") @db.VarChar(20)
  paymentId        String?        @map("payment_id")
  refundAmount     Decimal?       @map("refund_amount") @db.Decimal(8,2)

  // Timestamps detallados
  confirmedAt  DateTime? @map("confirmed_at")
  startedAt    DateTime? @map("started_at")
  completedAt  DateTime? @map("completed_at")
  cancelledAt  DateTime? @map("cancelled_at")
  noShowAt     DateTime? @map("no_show_at")
  rescheduledAt DateTime? @map("rescheduled_at")
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")

  // Relaciones
  user              User               @relation(fields: [userId], references: [id], onDelete: Cascade)
  clinic            Clinic             @relation(fields: [clinicId], references: [id], onDelete: Cascade)
  professional      Professional       @relation(fields: [professionalId], references: [id], onDelete: Cascade)
  treatment         Treatment          @relation(fields: [treatmentId], references: [id], onDelete: Cascade)
  rewardRedemptions RewardRedemption[]
  offerRedemptions  OfferRedemption[]
  appointmentReview AppointmentReview?

  @@index([userId, status], map: "idx_appointment_user")
  @@index([clinicId, scheduledDate], map: "idx_appointment_clinic_date")
  @@index([professionalId, scheduledDate], map: "idx_appointment_professional")
  @@index([status, scheduledDate], map: "idx_appointment_status")
  @@index([appointmentType, consultationRequired], map: "idx_appointment_legal")
  @@index([paymentStatus], map: "idx_appointment_payment")
  @@map("appointments")
}

// ============================================================================
// ‚≠ê SISTEMA DE REVIEWS Y RATINGS
// ============================================================================

model AppointmentReview {
  id            String @id @default(cuid())
  appointmentId String @unique @map("appointment_id")
  userId        String @map("user_id")
  professionalId String @map("professional_id")
  treatmentId   String @map("treatment_id")

  // Ratings (1-5)
  overallRating      Int @map("overall_rating")
  professionalRating Int @map("professional_rating")
  treatmentRating    Int @map("treatment_rating")
  facilityRating     Int @map("facility_rating")
  valueRating        Int @map("value_rating")

  // Review content
  title   String? @db.VarChar(100)
  comment String? @db.Text
  pros    String? @db.Text
  cons    String? @db.Text

  // Recommendation
  wouldRecommend Boolean @map("would_recommend")
  wouldReturn    Boolean @map("would_return")

  // Moderation
  isApproved Boolean @default(false) @map("is_approved")
  isVisible  Boolean @default(true) @map("is_visible")
  moderatedBy String? @map("moderated_by")
  moderatedAt DateTime? @map("moderated_at")

  // Metadata
  isAnonymous Boolean @default(false) @map("is_anonymous")
  helpfulVotes Int @default(0) @map("helpful_votes")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relaciones
  appointment  Appointment  @relation(fields: [appointmentId], references: [id], onDelete: Cascade)
  user         User         @relation("UserReviews", fields: [userId], references: [id], onDelete: Cascade)
  professional Professional @relation("ProfessionalReviews", fields: [professionalId], references: [id], onDelete: Cascade)  
  treatment    Treatment    @relation("TreatmentReviews", fields: [treatmentId], references: [id], onDelete: Cascade)

  @@index([userId], map: "idx_review_user")
  @@index([professionalId, isApproved], map: "idx_review_professional")
  @@index([treatmentId, isApproved], map: "idx_review_treatment")
  @@index([overallRating, isApproved], map: "idx_review_rating")
  @@map("appointment_reviews")
}

// ============================================================================
// üîê TOKENS DE RESET PARA PROFESIONALES Y USUARIOS
// ============================================================================

model ProfessionalPasswordReset {
  id             String   @id @default(cuid())
  professionalId String   @map("professional_id")
  token          String   @unique @db.VarChar(255)
  expiresAt      DateTime @map("expires_at")
  used           Boolean  @default(false)
  usedAt         DateTime? @map("used_at")
  ipAddress      String?  @map("ip_address") @db.VarChar(45)
  userAgent      String?  @map("user_agent") @db.Text
  createdAt      DateTime @default(now()) @map("created_at")

  professional Professional @relation(fields: [professionalId], references: [id], onDelete: Cascade)

  @@index([token], map: "idx_prof_reset_token")
  @@index([expiresAt], map: "idx_prof_reset_expiry")
  @@map("professional_password_resets")
}

model PasswordResetToken {
  id        String   @id @default(cuid())
  userId    String   @map("user_id")
  token     String   @unique @db.VarChar(255)
  expiresAt DateTime @map("expires_at")
  used      Boolean  @default(false)
  usedAt    DateTime? @map("used_at")
  ipAddress String?  @map("ip_address") @db.VarChar(45)
  userAgent String?  @map("user_agent") @db.Text
  createdAt DateTime @default(now()) @map("created_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([token], map: "idx_reset_token")
  @@index([expiresAt], map: "idx_reset_expiry")
  @@map("password_reset_tokens")
}

// ============================================================================
// ‚ú® VIP SUBSCRIPTION MEJORADO
// ============================================================================

model VipSubscription {
  id       String @id @default(cuid())
  userId   String @map("user_id")
  clinicId String @map("clinic_id")

  // Stripe integration
  stripeSubscriptionId String @unique @map("stripe_subscription_id") @db.VarChar(100)
  stripeCustomerId     String @map("stripe_customer_id") @db.VarChar(100)
  stripePriceId        String @map("stripe_price_id") @db.VarChar(100)

  // Configuraci√≥n del plan
  planType String @map("plan_type") @db.VarChar(20) // MONTHLY, QUARTERLY, YEARLY
  planName String @map("plan_name") @db.VarChar(50)
  status   String @default("ACTIVE") @db.VarChar(20) // ACTIVE, CANCELED, PAST_DUE, etc.

  // Precios
  price    Decimal @db.Decimal(8,2)
  currency String  @default("EUR") @db.VarChar(3)
  discount Decimal @default(0) @db.Decimal(8,2)

  // Per√≠odos
  currentPeriodStart DateTime  @map("current_period_start")
  currentPeriodEnd   DateTime  @map("current_period_end")
  trialStart         DateTime? @map("trial_start")
  trialEnd           DateTime? @map("trial_end")

  // Configuraci√≥n de cancelaci√≥n
  cancelAtPeriodEnd Boolean   @default(false) @map("cancel_at_period_end")
  canceledAt        DateTime? @map("canceled_at")
  cancelReason      String?   @map("cancel_reason") @db.Text

  // Beneficios y uso
  monthlyTreatments  Int @default(2) @map("monthly_treatments")
  usedTreatments     Int @default(0) @map("used_treatments")
  discountPercentage Int @default(20) @map("discount_percentage")
  priorityBooking    Boolean @default(true) @map("priority_booking")
  freeConsultations  Boolean @default(true) @map("free_consultations")
  beautyPointsMultiplier Decimal @default(1.5) @map("beauty_points_multiplier") @db.Decimal(3,2)

  // Analytics
  totalSavings       Decimal @default(0) @map("total_savings") @db.Decimal(8,2)
  treatmentsUsed     Int     @default(0) @map("treatments_used")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relaciones
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, status], map: "idx_user_subscription_status")
  @@index([status, currentPeriodEnd], map: "idx_subscription_expiry")
  @@index([stripeSubscriptionId], map: "idx_stripe_subscription")
  @@index([clinicId, status], map: "idx_clinic_subscriptions")
  @@map("vip_subscriptions")
}

// ============================================================================
// üéÅ SISTEMA DE OFERTAS Y PROMOCIONES MEJORADO
// ============================================================================

model Offer {
  id       String @id @default(cuid())
  clinicId String @map("clinic_id")

  // Informaci√≥n b√°sica
  title            String @db.VarChar(100)
  description      String @db.Text
  shortDescription String? @map("short_description") @db.VarChar(200)
  terms            String? @db.Text

  // Configuraci√≥n de descuento
  discountType  String  @default("PERCENTAGE") @db.VarChar(20) // PERCENTAGE, FIXED_AMOUNT, etc.
  discountValue Decimal @db.Decimal(8,2)
  originalPrice Decimal? @map("original_price") @db.Decimal(8,2)
  finalPrice    Decimal? @map("final_price") @db.Decimal(8,2)
  minPurchase   Decimal? @map("min_purchase") @db.Decimal(8,2)

  // Validez temporal
  validFrom  DateTime @map("valid_from")
  validUntil DateTime @map("valid_until")

  // Targeting y segmentaci√≥n
  targetAudience    String  @default("ALL") @map("target_audience") @db.VarChar(30)
  minAge            Int?    @map("min_age")
  maxAge            Int?    @map("max_age")
  genderTarget      String? @map("gender_target") @db.VarChar(20)
  loyaltyTierTarget String? @map("loyalty_tier_target") @db.VarChar(20)

  // Tratamientos aplicables
  treatmentIds String @default("[]") @map("treatment_ids") @db.Text // JSON
  categoryIds  String @default("[]") @map("category_ids") @db.Text // JSON

  // L√≠mites de uso
  maxUses        Int? @map("max_uses")
  maxUsesPerUser Int  @default(1) @map("max_uses_per_user")
  currentUses    Int  @default(0) @map("current_uses")

  // Configuraci√≥n visual y marketing
  imageUrl        String? @map("image_url") @db.Text
  backgroundColor String? @map("background_color") @db.VarChar(7)
  textColor       String? @map("text_color") @db.VarChar(7)
  priority        Int     @default(1)
  category        String  @default("GENERAL") @db.VarChar(20)

  // Configuraci√≥n de notificaciones
  sendNotification     Boolean @default(true) @map("send_notification")
  notificationSchedule String? @map("notification_schedule") @db.Text // JSON

  // Estados
  isActive   Boolean @default(true) @map("is_active")
  isFeatured Boolean @default(false) @map("is_featured")
  autoApply  Boolean @default(false) @map("auto_apply")

  // Metadata
  code String? @unique @db.VarChar(20)
  tags String? @db.Text // JSON array

  // Analytics
  viewCount       Int @default(0) @map("view_count")
  redemptionCount Int @default(0) @map("redemption_count")
  conversionRate  Decimal @default(0) @map("conversion_rate") @db.Decimal(5,4)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relaciones
  clinic           Clinic            @relation(fields: [clinicId], references: [id], onDelete: Cascade)
  offerRedemptions OfferRedemption[]

  @@index([clinicId, isActive], map: "idx_clinic_active_offers")
  @@index([validFrom, validUntil], map: "idx_offer_validity")
  @@index([targetAudience, category], map: "idx_offer_targeting")
  @@index([code], map: "idx_offer_code")
  @@map("offers")
}

model OfferRedemption {
  id            String  @id @default(cuid())
  offerId       String  @map("offer_id")
  userId        String  @map("user_id")
  appointmentId String? @map("appointment_id")

  // Informaci√≥n del canje
  redeemedAt      DateTime @default(now()) @map("redeemed_at")
  originalPrice   Decimal  @map("original_price") @db.Decimal(8,2)
  discountApplied Decimal  @map("discount_applied") @db.Decimal(8,2)
  finalPrice      Decimal  @map("final_price") @db.Decimal(8,2)

  // Estados y validez
  status    String    @default("ACTIVE") @db.VarChar(20) // ACTIVE, USED, EXPIRED, CANCELLED
  code      String    @unique @db.VarChar(50)
  usedAt    DateTime? @map("used_at")
  expiresAt DateTime  @map("expires_at")

  // Metadata
  notes         String? @db.Text
  usageLocation String? @map("usage_location") @db.VarChar(20)
  ipAddress     String? @map("ip_address") @db.VarChar(45)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relaciones
  offer       Offer        @relation(fields: [offerId], references: [id], onDelete: Cascade)
  user        User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  appointment Appointment? @relation(fields: [appointmentId], references: [id], onDelete: SetNull)

  @@index([userId, status], map: "idx_user_offer_redemptions")
  @@index([offerId, status], map: "idx_offer_usage")
  @@index([expiresAt], map: "idx_offer_expiry")
  @@map("offer_redemptions")
}

// ============================================================================
// üîî SISTEMA DE NOTIFICACIONES MEJORADO
// ============================================================================

model NotificationLog {
  id       String  @id @default(cuid())
  userId   String  @map("user_id")
  clinicId String? @map("clinic_id")

  // Tipo y contenido
  type     NotificationType
  category String? @db.VarChar(30)
  title    String @db.VarChar(200)
  body     String @db.Text
  imageUrl String? @map("image_url") @db.Text

  // Env√≠o y entrega
  sentAt       DateTime @default(now()) @map("sent_at")
  delivered    Boolean  @default(false)
  deliveredAt  DateTime? @map("delivered_at")
  opened       Boolean  @default(false)
  openedAt     DateTime? @map("opened_at")
  clicked      Boolean  @default(false)
  clickedAt    DateTime? @map("clicked_at")

  // Configuraci√≥n t√©cnica
  channel      String  @default("PUSH") @db.VarChar(10) // PUSH, EMAIL, SMS
  data         String? @db.Text // JSON adicional
  pushToken    String? @map("push_token") @db.Text
  platform     String? @db.VarChar(10) // ios, android
  deepLink     String? @map("deep_link") @db.Text

  // Errores y reintentos
  error        String? @db.Text
  retryCount   Int     @default(0) @map("retry_count")
  lastRetryAt  DateTime? @map("last_retry_at")

  // Metadata
  campaignId   String? @map("campaign_id") @db.VarChar(50)
  batchId      String? @map("batch_id") @db.VarChar(50)
  
  // Personalizaci√≥n
  isPersonalized Boolean @default(false) @map("is_personalized")
  userSegment    String? @map("user_segment") @db.VarChar(50)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relaciones
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, type], map: "idx_user_notification_type")
  @@index([sentAt], map: "idx_notification_date")
  @@index([delivered, opened], map: "idx_notification_status")
  @@index([clinicId, type], map: "idx_clinic_notifications")
  @@index([campaignId], map: "idx_notification_campaign")
  @@map("notification_logs")
}

// ============================================================================
// üéØ SISTEMA DE INVITACIONES Y REFERIDOS MEJORADO
// ============================================================================

model Invitation {
  id           String  @id @default(cuid())
  inviterId    String  @map("inviter_id")
  clinicId     String  @map("clinic_id")
  inviteeEmail String  @map("invitee_email") @db.VarChar(100)
  inviteeName  String? @map("invitee_name") @db.VarChar(100)

  // Estado y recompensas
  status       String @default("PENDING") @db.VarChar(20) // PENDING, ACCEPTED, EXPIRED, CANCELLED
  rewardPoints Int    @default(50) @map("reward_points")
  bonusPoints  Int    @default(0) @map("bonus_points")

  // Validez
  expiresAt  DateTime  @map("expires_at")
  acceptedAt DateTime? @map("accepted_at")
  acceptedBy String?   @map("accepted_by") // User ID que acept√≥

  // Metadata
  message      String? @db.Text
  inviteCode   String  @unique @map("invite_code") @db.VarChar(20)
  shareChannel String? @map("share_channel") @db.VarChar(20) // EMAIL, SMS, WHATSAPP, etc.

  // Tracking
  sentAt       DateTime? @map("sent_at")
  viewedAt     DateTime? @map("viewed_at")
  clickedAt    DateTime? @map("clicked_at")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relaciones
  inviter User @relation(fields: [inviterId], references: [id], onDelete: Cascade)

  @@index([inviterId, status], map: "idx_inviter_status")
  @@index([inviteCode], map: "idx_invite_code")
  @@index([expiresAt], map: "idx_invitation_expiry")
  @@index([inviteeEmail], map: "idx_invitee_email")
  @@map("invitations")
}

// ============================================================================
// üí° WELLNESS TIPS MEJORADO
// ============================================================================

model WellnessTip {
  id       String  @id @default(cuid())
  clinicId String? @map("clinic_id")

  title    String @db.VarChar(100)
  content  String @db.Text
  excerpt  String? @db.VarChar(200)
  category String @db.VarChar(30) // skincare, nutrition, lifestyle, treatments

  // Targeting mejorado
  targetAge       String? @map("target_age") @db.VarChar(20)
  targetGender    String? @map("target_gender") @db.VarChar(20)
  targetSkinType  String? @map("target_skin_type") @db.VarChar(20)
  seasonality     String? @db.Text // JSON para estacionalidad
  loyaltyTier     String? @map("loyalty_tier") @db.VarChar(20)

  // Visual mejorado
  iconName String  @map("icon_name") @db.VarChar(50)
  imageUrl String? @map("image_url") @db.Text
  color    String? @db.VarChar(7)
  videoUrl String? @map("video_url") @db.Text

  // Configuraci√≥n
  isActive   Boolean @default(true) @map("is_active")
  isFeatured Boolean @default(false) @map("is_featured")
  priority   Int     @default(1)
  difficulty String  @default("EASY") @db.VarChar(20) // EASY, MEDIUM, HARD

  // Engagement mejorado
  views     Int @default(0)
  likes     Int @default(0)
  shares    Int @default(0)
  bookmarks Int @default(0)
  rating    Decimal? @db.Decimal(3,2)

  // Metadata
  tags       String? @db.Text // JSON array
  authorName String? @map("author_name") @db.VarChar(100)
  sourceUrl  String? @map("source_url") @db.Text
  readTime   Int?    @map("read_time") // minutos estimados

  // SEO
  seoTitle       String? @map("seo_title") @db.VarChar(200)
  seoDescription String? @map("seo_description") @db.Text

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  publishedAt DateTime? @map("published_at")

  // Relaciones
  clinic Clinic? @relation(fields: [clinicId], references: [id], onDelete: Cascade)

  @@index([clinicId, isActive], map: "idx_wellness_clinic")
  @@index([category, isActive], map: "idx_wellness_category")
  @@index([isFeatured, priority], map: "idx_wellness_featured")
  @@index([publishedAt], map: "idx_wellness_published")
  @@map("wellness_tips")
}

// ============================================================================
// üí∞ STRIPE INTEGRATION COMPLETA
// ============================================================================

model StripeCustomer {
  id               String  @id @default(cuid())
  userId           String  @unique @map("user_id")
  stripeCustomerId String  @unique @map("stripe_customer_id") @db.VarChar(100)
  email            String  @db.VarChar(100)
  name             String? @db.VarChar(100)
  phone            String? @db.VarChar(20)
  address          String? @db.Text // JSON
  taxId            String? @map("tax_id") @db.VarChar(20)

  // Estados
  isDeleted Boolean   @default(false) @map("is_deleted")
  deletedAt DateTime? @map("deleted_at")

  // Balance y cr√©ditos
  accountBalance Decimal @default(0) @map("account_balance") @db.Decimal(10,2)
  creditBalance  Decimal @default(0) @map("credit_balance") @db.Decimal(10,2)

  // Metadata
  metadata String? @db.Text // JSON

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relaciones
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([stripeCustomerId], map: "idx_stripe_customer")
  @@map("stripe_customers")
}

model PaymentMethod {
  id             String @id @default(cuid())
  userId         String @map("user_id")
  stripeMethodId String @unique @map("stripe_method_id") @db.VarChar(100)

  // Informaci√≥n de la tarjeta
  type        String  @db.VarChar(20) // card, sepa_debit, ideal, etc.
  last4       String? @db.VarChar(4)
  brand       String? @db.VarChar(20) // visa, mastercard, amex
  expiryMonth Int?    @map("expiry_month")
  expiryYear  Int?    @map("expiry_year")
  funding     String? @db.VarChar(20) // credit, debit, prepaid
  country     String? @db.VarChar(2)

  // Configuraci√≥n
  isDefault Boolean @default(false) @map("is_default")
  nickname  String? @db.VarChar(50)

  // Estados
  isActive   Boolean   @default(true) @map("is_active")
  isVerified Boolean   @default(false) @map("is_verified")
  deletedAt  DateTime? @map("deleted_at")

  // Metadata de Stripe
  fingerprint String? @db.VarChar(100)
  metadata    String? @db.Text // JSON

  // Seguridad
  failedAttempts Int @default(0) @map("failed_attempts")
  lastUsedAt     DateTime? @map("last_used_at")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relaciones
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, isDefault], map: "idx_user_default_payment")
  @@index([userId, isActive], map: "idx_user_active_payments")
  @@map("payment_methods")
}

model Payment {
  id       String  @id @default(cuid())
  userId   String  @map("user_id")
  clinicId String? @map("clinic_id")

  // IDs de Stripe
  stripeInvoiceId       String? @map("stripe_invoice_id") @db.VarChar(100)
  stripePaymentIntentId String? @map("stripe_payment_intent_id") @db.VarChar(100)
  stripeSubscriptionId  String? @map("stripe_subscription_id") @db.VarChar(100)
  stripeChargeId        String? @map("stripe_charge_id") @db.VarChar(100)

  // Informaci√≥n del pago
  amount      Decimal @db.Decimal(10,2)
  currency    String  @default("EUR") @db.VarChar(3)
  status      PaymentStatus
  description String? @db.Text

  // Tipo de pago
  paymentType String  @default("SUBSCRIPTION") @db.VarChar(20) // SUBSCRIPTION, TREATMENT, etc.
  relatedId   String? @map("related_id")

  // Informaci√≥n de facturaci√≥n
  customerName  String? @map("customer_name") @db.VarChar(100)
  customerEmail String? @map("customer_email") @db.VarChar(100)
  invoiceNumber String? @map("invoice_number") @db.VarChar(50)
  taxAmount     Decimal? @map("tax_amount") @db.Decimal(8,2)

  // M√©todo de pago
  paymentMethodId   String? @map("payment_method_id")
  paymentMethodType String? @map("payment_method_type") @db.VarChar(20)
  last4Digits       String? @map("last4_digits") @db.VarChar(4)

  // Errores y reembolsos
  failureReason String? @map("failure_reason") @db.Text
  refundAmount  Decimal? @map("refund_amount") @db.Decimal(10,2)
  refundReason  String? @map("refund_reason") @db.Text

  // Timestamps
  paidAt     DateTime? @map("paid_at")
  refundedAt DateTime? @map("refunded_at")
  failedAt   DateTime? @map("failed_at")

  // Metadata
  metadata   String? @db.Text // JSON
  receiptUrl String? @map("receipt_url") @db.Text

  // Fees y comisiones
  stripeFee    Decimal? @map("stripe_fee") @db.Decimal(8,2)
  applicationFee Decimal? @map("application_fee") @db.Decimal(8,2)
  netAmount    Decimal? @map("net_amount") @db.Decimal(10,2)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relaciones
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, status], map: "idx_user_payments")
  @@index([stripeInvoiceId], map: "idx_stripe_invoice")
  @@index([clinicId, paymentType], map: "idx_clinic_payments")
  @@index([status, paidAt], map: "idx_payment_status")
  @@map("payments")
}

// ============================================================================
// üîó WEBHOOK EVENTS
// ============================================================================

model WebhookEvent {
  id            String @id @default(cuid())
  stripeEventId String @unique @map("stripe_event_id") @db.VarChar(100)
  eventType     String @map("event_type") @db.VarChar(50)

  // Procesamiento
  processed  Boolean @default(false)
  error      String? @db.Text
  retryCount Int     @default(0) @map("retry_count")

  // Datos del evento
  data       String  @db.Text // JSON del evento completo
  livemode   Boolean @default(false)
  apiVersion String? @map("api_version") @db.VarChar(20)

  // Timestamps
  eventCreatedAt DateTime  @map("event_created_at")
  processedAt    DateTime? @map("processed_at")
  createdAt      DateTime  @default(now()) @map("created_at")

  @@index([stripeEventId], map: "idx_stripe_event")
  @@index([eventType, processed], map: "idx_webhook_processing")
  @@index([createdAt], map: "idx_webhook_cleanup")
  @@map("webhook_events")
}

// ============================================================================
// üèÜ SISTEMA DE RECOMPENSAS MEJORADO
// ============================================================================

model RewardTemplate {
  id       String @id @default(cuid())
  clinicId String @map("clinic_id")

  // Informaci√≥n b√°sica
  name             String @db.VarChar(100)
  description      String @db.Text
  shortDescription String? @map("short_description") @db.VarChar(200)
  type             String @db.VarChar(30) // DISCOUNT, UPGRADE, FREE_SERVICE, etc.

  // Configuraci√≥n del valor
  value      Decimal @db.Decimal(8,2)
  valueType  String  @default("PERCENTAGE") @map("value_type") @db.VarChar(20)
  pointsCost Int     @map("points_cost")
  marginCost Decimal @map("margin_cost") @db.Decimal(8,2)

  // Restricciones y condiciones
  conditions      String? @db.Text // JSON
  validityDays    Int     @default(30) @map("validity_days")
  maxUsesPerMonth Int     @default(10) @map("max_uses_per_month")
  maxUsesPerUser  Int     @default(1) @map("max_uses_per_user")
  minLoyaltyScore Int     @default(0) @map("min_loyalty_score")
  targetUserType  String? @map("target_user_type") @db.VarChar(20)

  // Tratamientos aplicables
  applicableTreatments String? @map("applicable_treatments") @db.Text // JSON
  excludedTreatments   String? @map("excluded_treatments") @db.Text // JSON

  // Visual y marketing
  iconName String  @map("icon_name") @db.VarChar(50)
  color    String? @db.VarChar(7)
  imageUrl String? @map("image_url") @db.Text
  badge    String? @db.VarChar(20)

  // Analytics y optimizaci√≥n
  popularity     Decimal @default(0) @db.Decimal(5,4)
  conversionRate Decimal @default(0) @map("conversion_rate") @db.Decimal(5,4)
  seasonality    String? @db.Text // JSON

  // Estados
  isActive   Boolean @default(true) @map("is_active")
  isFeatured Boolean @default(false) @map("is_featured")
  isLimited  Boolean @default(false) @map("is_limited")

  // Configuraci√≥n avanzada
  autoAssign   Boolean @default(false) @map("auto_assign")
  stackable    Boolean @default(false)
  transferable Boolean @default(false)

  // L√≠mites de stock
  stockLimit    Int? @map("stock_limit")
  stockRemaining Int? @map("stock_remaining")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relaciones
  clinic      Clinic             @relation(fields: [clinicId], references: [id], onDelete: Cascade)
  redemptions RewardRedemption[]

  @@index([clinicId, isActive], map: "idx_clinic_active_rewards")
  @@index([pointsCost, isActive], map: "idx_reward_cost")
  @@index([isFeatured, popularity], map: "idx_reward_featured")
  @@map("reward_templates")
}

model RewardRedemption {
  id            String  @id @default(cuid())
  userId        String  @map("user_id")
  templateId    String  @map("template_id")
  appointmentId String? @map("appointment_id")

  // Informaci√≥n del canje
  code           String  @unique @db.VarChar(50)
  status         String  @default("ACTIVE") @db.VarChar(20) // ACTIVE, USED, EXPIRED, etc.
  pointsUsed     Int     @map("points_used")
  discountAmount Decimal? @map("discount_amount") @db.Decimal(8,2)

  // Validez y uso
  expiresAt DateTime  @map("expires_at")
  usedAt    DateTime? @map("used_at")

  // Transferencia
  transferredTo String?   @map("transferred_to")
  transferredAt DateTime? @map("transferred_at")
  transferCode  String?   @map("transfer_code") @db.VarChar(20)

  // Metadata
  notes         String? @db.Text
  usageLocation String? @map("usage_location") @db.VarChar(20)
  ipAddress     String? @map("ip_address") @db.VarChar(45)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relaciones
  user        User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  template    RewardTemplate @relation(fields: [templateId], references: [id])
  appointment Appointment?   @relation(fields: [appointmentId], references: [id])

  @@index([userId, status], map: "idx_user_reward_redemptions")
  @@index([templateId], map: "idx_template_redemptions")
  @@index([expiresAt], map: "idx_reward_expiry")
  @@index([code], map: "idx_reward_code")
  @@map("reward_redemptions")
}

// ============================================================================
// üì± SISTEMA DE SESIONES Y SEGURIDAD MEJORADO
// ============================================================================

model UserSession {
  id             String  @id @default(cuid())
  userId         String? @map("user_id")
  professionalId String? @map("professional_id")
  sessionType    String  @map("session_type") @db.VarChar(20) // USER, PROFESSIONAL, etc.

  // Informaci√≥n de la sesi√≥n
  token        String   @unique @db.VarChar(255)
  refreshToken String?  @map("refresh_token") @db.VarChar(255)
  expiresAt    DateTime @map("expires_at")

  // Informaci√≥n del dispositivo
  deviceId   String? @map("device_id") @db.VarChar(100)
  deviceType String? @map("device_type") @db.VarChar(20)
  deviceName String? @map("device_name") @db.VarChar(100)
  platform   String? @db.VarChar(20) // ios, android, web
  appVersion String? @map("app_version") @db.VarChar(20)

  // Informaci√≥n de red
  ipAddress String? @map("ip_address") @db.VarChar(45)
  userAgent String? @map("user_agent") @db.Text
  location  String? @db.Text // JSON con geolocalizaci√≥n
  country   String? @db.VarChar(2)
  city      String? @db.VarChar(50)

  // Estados
  isActive  Boolean @default(true) @map("is_active")
  isRevoked Boolean @default(false) @map("is_revoked")

  // Actividad
  lastActivity  DateTime  @default(now()) @map("last_activity")
  revokedAt     DateTime? @map("revoked_at")
  revokedReason String?   @map("revoked_reason") @db.Text

  // Seguridad
  loginMethod      String? @map("login_method") @db.VarChar(20) // PASSWORD, BIOMETRIC, etc.
  twoFactorEnabled Boolean @default(false) @map("two_factor_enabled")
  suspiciousActivity Boolean @default(false) @map("suspicious_activity")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relaciones
  user         User?         @relation(fields: [userId], references: [id], onDelete: Cascade)
  professional Professional? @relation(fields: [professionalId], references: [id], onDelete: Cascade)

  @@index([token], map: "idx_session_token")
  @@index([userId, isActive], map: "idx_user_sessions")
  @@index([professionalId, isActive], map: "idx_professional_sessions")
  @@index([expiresAt], map: "idx_session_expiry")
  @@index([ipAddress], map: "idx_session_ip")
  @@map("user_sessions")
}

// ============================================================================
// üõ°Ô∏è AUDIT LOG COMPLETO
// ============================================================================

model AuditLog {
  id String @id @default(cuid())

  // Actor (quien realiz√≥ la acci√≥n)
  userId         String? @map("user_id")
  professionalId String? @map("professional_id")
  clinicId       String? @map("clinic_id")
  actorType      String  @map("actor_type") @db.VarChar(20) // USER, PROFESSIONAL, etc.
  actorEmail     String? @map("actor_email") @db.VarChar(100)

  // Acci√≥n realizada
  action     String @db.VarChar(50) // CREATE, UPDATE, DELETE, LOGIN, etc.
  resource   String @db.VarChar(50) // USER, APPOINTMENT, PAYMENT, etc.
  resourceId String? @map("resource_id") @db.VarChar(50)

  // Detalles de la acci√≥n
  description String? @db.Text
  changes     String? @db.Text // JSON con cambios
  oldValues   String? @map("old_values") @db.Text // JSON
  newValues   String? @map("new_values") @db.Text // JSON

  // Contexto t√©cnico
  ipAddress String? @map("ip_address") @db.VarChar(45)
  userAgent String? @map("user_agent") @db.Text
  platform  String? @db.VarChar(20)
  sessionId String? @map("session_id") @db.VarChar(50)

  // Metadatos
  severity String  @default("INFO") @db.VarChar(10) // DEBUG, INFO, WARN, ERROR, CRITICAL
  category String? @db.VarChar(30) // SECURITY, BUSINESS, SYSTEM
  tags     String? @db.Text // JSON array de tags

  // Compliance y legal
  gdprRelevant    Boolean @default(false) @map("gdpr_relevant")
  retentionPolicy String? @map("retention_policy") @db.VarChar(20)

  createdAt DateTime @default(now()) @map("created_at")

  @@index([userId, action], map: "idx_audit_user_action")
  @@index([professionalId, action], map: "idx_audit_professional_action")
  @@index([clinicId, action], map: "idx_audit_clinic_action")
  @@index([resource, resourceId], map: "idx_audit_resource")
  @@index([createdAt], map: "idx_audit_date")
  @@index([severity, category], map: "idx_audit_severity")
  @@index([gdprRelevant], map: "idx_audit_gdpr")
  @@map("audit_logs")
}

// ============================================================================
// üìä ANALYTICS Y M√âTRICAS
// ============================================================================

model AnalyticsEvent {
  id       String @id @default(cuid())
  userId   String? @map("user_id")
  clinicId String? @map("clinic_id")
  sessionId String? @map("session_id") @db.VarChar(50)

  // Evento
  eventName String @map("event_name") @db.VarChar(50)
  eventType String @map("event_type") @db.VarChar(30) // USER_ACTION, SYSTEM_EVENT, etc.
  category  String? @db.VarChar(30)

  // Propiedades del evento
  properties String? @db.Text // JSON con propiedades espec√≠ficas
  value      Decimal? @db.Decimal(10,2) // Valor monetario si aplica
  
  // Contexto del usuario
  userType      String? @map("user_type") @db.VarChar(20)
  loyaltyTier   String? @map("loyalty_tier") @db.VarChar(20)
  isVip         Boolean? @map("is_vip")
  userSegment   String? @map("user_segment") @db.VarChar(30)

  // Contexto t√©cnico
  platform      String? @db.VarChar(20)
  deviceType    String? @map("device_type") @db.VarChar(20)
  appVersion    String? @map("app_version") @db.VarChar(20)
  screenName    String? @map("screen_name") @db.VarChar(50)

  // Contexto temporal
  dayOfWeek     Int? @map("day_of_week") // 1-7
  hourOfDay     Int? @map("hour_of_day") // 0-23
  isWeekend     Boolean? @map("is_weekend")
  timeZone      String? @map("time_zone") @db.VarChar(50)

  // Geolocalizaci√≥n
  country       String? @db.VarChar(2)
  city          String? @db.VarChar(50)
  ipAddress     String? @map("ip_address") @db.VarChar(45)

  createdAt DateTime @default(now()) @map("created_at")

  @@index([userId, eventName], map: "idx_analytics_user_event")
  @@index([clinicId, eventName], map: "idx_analytics_clinic_event")
  @@index([eventName, createdAt], map: "idx_analytics_event_time")
  @@index([createdAt], map: "idx_analytics_date")
  @@map("analytics_events")
}

// ============================================================================
// üìà BUSINESS METRICS PARA REPORTING
// ============================================================================

model BusinessMetric {
  id       String @id @default(cuid())
  clinicId String @map("clinic_id")
  
  // Per√≠odo de medici√≥n
  metricDate   DateTime @map("metric_date") @db.Date
  metricPeriod String   @map("metric_period") @db.VarChar(10) // DAILY, WEEKLY, MONTHLY
  
  // M√©tricas de appointments
  totalAppointments     Int @default(0) @map("total_appointments")
  completedAppointments Int @default(0) @map("completed_appointments")
  cancelledAppointments Int @default(0) @map("cancelled_appointments")
  noShowAppointments    Int @default(0) @map("no_show_appointments")
  
  // M√©tricas de revenue
  totalRevenue      Decimal @default(0) @map("total_revenue") @db.Decimal(10,2)
  vipRevenue        Decimal @default(0) @map("vip_revenue") @db.Decimal(10,2)
  avgRevenuePerUser Decimal @default(0) @map("avg_revenue_per_user") @db.Decimal(8,2)
  
  // M√©tricas de usuarios
  newUsers       Int @default(0) @map("new_users")
  activeUsers    Int @default(0) @map("active_users")
  returningUsers Int @default(0) @map("returning_users")
  churnedUsers   Int @default(0) @map("churned_users")
  
  // M√©tricas de conversi√≥n
  signupConversion   Decimal @default(0) @map("signup_conversion") @db.Decimal(5,4)
  bookingConversion  Decimal @default(0) @map("booking_conversion") @db.Decimal(5,4)
  vipConversion      Decimal @default(0) @map("vip_conversion") @db.Decimal(5,4)
  
  // M√©tricas de satisfacci√≥n
  avgRating          Decimal? @map("avg_rating") @db.Decimal(3,2)
  npsScore          Decimal? @map("nps_score") @db.Decimal(5,2)
  reviewCount       Int @default(0) @map("review_count")
  
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
  @@unique([clinicId, metricDate, metricPeriod], map: "unique_clinic_metric_period")
  @@index([clinicId, metricPeriod], map: "idx_clinic_metrics")
  @@index([metricDate], map: "idx_metric_date")
  @@map("business_metrics")
}

// ============================================================================
// üîß CONFIGURACI√ìN DEL SISTEMA
// ============================================================================

model SystemConfig {
  id    String @id @default(cuid())
  key   String @unique @db.VarChar(100)
  value String @db.Text
  type  String @db.VarChar(20) // STRING, NUMBER, BOOLEAN, JSON
  
  // Metadata
  description String? @db.Text
  category    String? @db.VarChar(30)
  isPublic    Boolean @default(false) @map("is_public")
  isEditable  Boolean @default(true) @map("is_editable")
  
  // Validaci√≥n
  validationRules String? @map("validation_rules") @db.Text // JSON
  defaultValue    String? @map("default_value") @db.Text
  
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
  @@index([category], map: "idx_config_category")
  @@index([isPublic], map: "idx_config_public")
  @@map("system_configs")
}

// ============================================================================
// üì± APP VERSIONING Y FEATURE FLAGS
// ============================================================================

model FeatureFlag {
  id          String @id @default(cuid())
  name        String @unique @db.VarChar(100)
  description String? @db.Text
  
  // Estado
  isEnabled   Boolean @default(false) @map("is_enabled")
  environment String  @default("production") @db.VarChar(20)
  
  // Targeting
  targetUsers    String? @map("target_users") @db.Text // JSON array de user IDs
  targetClinics  String? @map("target_clinics") @db.Text // JSON array de clinic IDs
  targetPercent  Int?    @map("target_percent") // % de usuarios
  
  // Configuraci√≥n
  config      String? @db.Text // JSON con configuraci√≥n espec√≠fica
  constraints String? @db.Text // JSON con constraints
  
  // Validez
  validFrom   DateTime? @map("valid_from")
  validUntil  DateTime? @map("valid_until")
  
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
  @@index([isEnabled, environment], map: "idx_feature_flag_enabled")
  @@index([validFrom, validUntil], map: "idx_feature_flag_validity")
  @@map("feature_flags")
}

// ============================================================================
// üìã CONSTRAINTS Y VALIDACIONES DE DATOS
// ============================================================================

// Constraints adicionales a nivel de base de datos
// Estas reglas se aplican directamente en PostgreSQL

// Para User
// ALTER TABLE users ADD CONSTRAINT check_beauty_points CHECK (beauty_points >= 0);
// ALTER TABLE users ADD CONSTRAINT check_email_format CHECK (email ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,});
// ALTER TABLE users ADD CONSTRAINT check_birth_date CHECK (birth_date <= CURRENT_DATE);

// Para Treatment  
// ALTER TABLE treatments ADD CONSTRAINT check_price_positive CHECK (price >= 0);
// ALTER TABLE treatments ADD CONSTRAINT check_vip_price_not_higher CHECK (vip_price IS NULL OR vip_price <= price);
// ALTER TABLE treatments ADD CONSTRAINT check_duration_positive CHECK (duration_minutes > 0);

// Para Appointment
// ALTER TABLE appointments ADD CONSTRAINT check_end_after_start CHECK (end_time > scheduled_time);
// ALTER TABLE appointments ADD CONSTRAINT check_prices_positive CHECK (original_price >= 0 AND final_price >= 0);

// Para Professional
// ALTER TABLE professionals ADD CONSTRAINT check_rating_range CHECK (rating >= 0 AND rating <= 5);
// ALTER TABLE professionals ADD CONSTRAINT check_commission_range CHECK (commission_rate IS NULL OR (commission_rate >= 0 AND commission_rate <= 100));

// ============================================================================
// üéØ √çNDICES ADICIONALES PARA PERFORMANCE
// ============================================================================

// √çndices compuestos adicionales para queries frecuentes:
// CREATE INDEX CONCURRENTLY idx_appointments_user_status_date ON appointments(user_id, status, scheduled_date);
// CREATE INDEX CONCURRENTLY idx_treatments_clinic_category_active ON treatments(clinic_id, category, is_active);
// CREATE INDEX CONCURRENTLY idx_users_clinic_vip_active ON users(primary_clinic_id, vip_status, is_active);
// CREATE INDEX CONCURRENTLY idx_professionals_clinic_rating ON professionals(clinic_id, rating) WHERE is_active = true;

// √çndices parciales para casos espec√≠ficos:
// CREATE INDEX CONCURRENTLY idx_vip_subscriptions_active ON vip_subscriptions(user_id) WHERE status = 'ACTIVE';
// CREATE INDEX CONCURRENTLY idx_expired_tokens ON password_reset_tokens(expires_at) WHERE used = false;

// ============================================================================
// üîö FIN DEL SCHEMA - VERSI√ìN 3.0 PRODUCTION READY ‚úÖ
// ============================================================================