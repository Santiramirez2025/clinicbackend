generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ============================================================================
// ‚úÖ ENUMS PARA CLASIFICACI√ìN LEGAL
// ============================================================================
enum TreatmentRiskLevel {
  LOW       // Grupo A - Sin consulta previa obligatoria
  MEDIUM    // Grupo B - Consulta recomendada
  HIGH      // Grupo B - Consulta obligatoria
}

enum ConsentType {
  SIMPLE    // Consentimiento b√°sico
  INFORMED  // Consentimiento informado
  MEDICAL   // Consentimiento m√©dico detallado
}

enum AppointmentType {
  DIRECT                // Reserva directa
  CONSULTATION_ONLY     // Solo consulta
  CONSULTATION_TREATMENT // Consulta + Tratamiento el mismo d√≠a
  CONSULTATION_SEPARATE  // Consulta previa obligatoria en cita separada
}

// ============================================================================
// üè• MODELO CL√çNICA - ACTUALIZADO CON COMPLIANCE LEGAL
// ============================================================================
model Clinic {
  id           String  @id @default(cuid())
  name         String
  slug         String  @unique // URL amigable: "clinica-madrid-centro"
  email        String  @unique
  passwordHash String  @map("password_hash")
  phone        String
  address      String
  city         String
  country      String  @default("ES")
  timezone     String  @default("Europe/Madrid")
  logoUrl      String? @map("logo_url")
  websiteUrl   String? @map("website_url")
  brandColors  String? @map("brand_colors") // JSON

  // ‚úÖ NUEVA CONFIGURACI√ìN LEGAL
  medicalLicense       String?  @map("medical_license")
  healthRegistration   String?  @map("health_registration") // Registro sanitario
  autonomousCommunity  String?  @map("autonomous_community") // CCAA
  legalCompliance      String?  @map("legal_compliance") // JSON con configuraciones
  
  // ‚úÖ CONFIGURACI√ìN DE CONSENTIMIENTOS
  defaultConsentPolicy String?  @map("default_consent_policy") // JSON
  requiresDigitalSignature Boolean @default(false) @map("requires_digital_signature")
  
  // ‚úÖ CONFIGURACI√ìN DE TRATAMIENTOS
  allowsDirectBookingHighRisk Boolean @default(false) @map("allows_direct_booking_high_risk")
  consultationMinimumTime     Int?    @map("consultation_minimum_time") // minutos

  // Configuraci√≥n de negocio
  businessHours         String    @map("business_hours") // JSON
  subscriptionPlan      String    @default("FREE") @map("subscription_plan")
  subscriptionExpiresAt DateTime? @map("subscription_expires_at")
  maxProfessionals      Int       @default(2) @map("max_professionals")
  maxPatients           Int       @default(100) @map("max_patients")

  // Configuraci√≥n de features
  enableVipProgram    Boolean @default(true) @map("enable_vip_program")
  enableNotifications Boolean @default(true) @map("enable_notifications")
  enableOnlineBooking Boolean @default(true) @map("enable_online_booking")
  enablePayments      Boolean @default(false) @map("enable_payments")

  // Estados
  isActive            Boolean @default(true) @map("is_active")
  isVerified          Boolean @default(false) @map("is_verified")
  onboardingCompleted Boolean @default(false) @map("onboarding_completed")

  // Metadata
  settings  String? // JSON configuraciones adicionales
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relaciones
  professionals       Professional[]
  users               User[]
  treatments          Treatment[]
  appointments        Appointment[]
  rewardTemplates     RewardTemplate[]
  offers              Offer[]
  consentFormTemplates ConsentFormTemplate[] // ‚úÖ NUEVO

  @@index([slug], map: "idx_clinic_slug")
  @@index([city, isActive], map: "idx_clinic_location")
  @@index([subscriptionPlan, subscriptionExpiresAt], map: "idx_clinic_subscription")
  @@map("clinics")
}

// ============================================================================
// üë• MODELO USER - ACTUALIZADO CON INFORMACI√ìN M√âDICA
// ============================================================================
model User {
  id           String    @id @default(cuid())
  email        String    @unique
  passwordHash String    @map("password_hash")
  firstName    String    @map("first_name")
  lastName     String    @map("last_name")
  phone        String?
  avatarUrl    String?   @map("avatar_url")
  birthDate    DateTime? @map("birth_date")
  gender       String? // F, M, Other, PreferNotToSay

  // Cl√≠nica principal (donde se registr√≥)
  primaryClinicId String @map("primary_clinic_id")

  // ‚úÖ NUEVA INFORMACI√ìN M√âDICA PARA COMPLIANCE
  hasAllergies         Boolean? @map("has_allergies")
  allergyDetails       String?  @map("allergy_details") // JSON
  hasMedicalConditions Boolean? @map("has_medical_conditions")
  medicalDetails       String?  @map("medical_details") // JSON
  takingMedications    Boolean? @map("taking_medications")
  medicationDetails    String?  @map("medication_details") // JSON
  
  // ‚úÖ CONSENTIMIENTOS
  generalConsentDate   DateTime? @map("general_consent_date")
  marketingConsentDate DateTime? @map("marketing_consent_date")
  dataProcessingConsent Boolean  @default(false) @map("data_processing_consent")

  // Datos m√©dicos/est√©ticos (existente)
  skinType             String? @map("skin_type")
  allergies            String? // JSON array - DEPRECATED, usar allergyDetails
  medicalConditions    String? @map("medical_conditions") // JSON - DEPRECATED
  treatmentPreferences String? @map("treatment_preferences") // JSON

  // Gamificaci√≥n
  beautyPoints      Int     @default(0) @map("beauty_points")
  totalInvestment   Float   @default(0) @map("total_investment")
  sessionsCompleted Int     @default(0) @map("sessions_completed")
  loyaltyTier       String  @default("BRONZE") @map("loyalty_tier") // BRONZE, SILVER, GOLD, DIAMOND
  vipStatus         Boolean @default(false) @map("vip_status")

  // Configuraci√≥n de notificaciones
  pushToken              String?   @map("push_token")
  devicePlatform         String?   @map("device_platform") // ios, android
  deviceInfo             String?   @map("device_info") // JSON
  pushSettings           String?   @map("push_settings") // JSON
  emailNotifications     Boolean   @default(true) @map("email_notifications")
  smsNotifications       Boolean   @default(false) @map("sms_notifications")
  marketingNotifications Boolean   @default(true) @map("marketing_notifications")
  lastNotificationSent   DateTime? @map("last_notification_sent")

  // Estados
  isActive    Boolean   @default(true) @map("is_active")
  isVerified  Boolean   @default(false) @map("is_verified")
  isBlocked   Boolean   @default(false) @map("is_blocked")
  lastLoginAt DateTime? @map("last_login_at")

  // Metadata
  referralCode        String? @unique @map("referral_code")
  referredBy          String? @map("referred_by")
  onboardingCompleted Boolean @default(false) @map("onboarding_completed")
  privacyAccepted     Boolean @default(false) @map("privacy_accepted")
  termsAccepted       Boolean @default(false) @map("terms_accepted")
  marketingAccepted   Boolean @default(false) @map("marketing_accepted")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relaciones
  primaryClinic       Clinic               @relation(fields: [primaryClinicId], references: [id])
  appointments        Appointment[]
  vipSubscriptions    VipSubscription[]
  invitations         Invitation[]
  passwordResetTokens PasswordResetToken[]
  rewardRedemptions   RewardRedemption[]
  stripeCustomer      StripeCustomer?
  paymentMethods      PaymentMethod[]
  payments            Payment[]
  notificationLogs    NotificationLog[]
  offerRedemptions    OfferRedemption[]
  userSessions        UserSession[]
  patientConsents     PatientConsent[] // ‚úÖ NUEVO

  @@index([primaryClinicId, isActive], map: "idx_user_clinic")
  @@index([email], map: "idx_user_email")
  @@index([loyaltyTier, vipStatus], map: "idx_user_loyalty")
  @@index([referralCode], map: "idx_user_referral")
  @@map("users")
}

// ============================================================================
// üë®‚Äç‚öïÔ∏è MODELO PROFESSIONAL - CON AUTENTICACI√ìN COMPLETA
// ============================================================================
model Professional {
  id       String @id @default(cuid())
  clinicId String @map("clinic_id")

  // Autenticaci√≥n
  email        String @unique
  passwordHash String @map("password_hash")
  role         String @default("PROFESSIONAL") // PROFESSIONAL, MANAGER, RECEPTIONIST

  // Datos personales
  firstName String  @map("first_name")
  lastName  String  @map("last_name")
  phone     String?
  avatarUrl String? @map("avatar_url")

  // Datos profesionales
  licenseNumber  String? @map("license_number")
  specialties    String // JSON array de especialidades
  certifications String? // JSON array de certificaciones
  experience     Int? // A√±os de experiencia
  bio            String?
  languages      String? // JSON array de idiomas

  // Configuraci√≥n laboral
  employmentType String  @default("FULL_TIME") @map("employment_type") // FULL_TIME, PART_TIME, CONTRACTOR
  hourlyRate     Float?  @map("hourly_rate")
  commissionRate Float?  @map("commission_rate") // Porcentaje de comisi√≥n
  availableHours String? @map("available_hours") // JSON horarios disponibles
  workingDays    String? @map("working_days") // JSON d√≠as laborables

  // Performance
  rating              Float @default(5.0)
  totalAppointments   Int   @default(0) @map("total_appointments")
  totalRevenue        Float @default(0) @map("total_revenue")
  patientSatisfaction Float @default(5.0) @map("patient_satisfaction")

  // Permisos y accesos
  permissions         String  @default("[]") // JSON array de permisos
  canManageSchedule   Boolean @default(true) @map("can_manage_schedule")
  canViewReports      Boolean @default(false) @map("can_view_reports")
  canManagePatients   Boolean @default(false) @map("can_manage_patients")
  canManageTreatments Boolean @default(false) @map("can_manage_treatments")

  // Estados
  isActive            Boolean   @default(true) @map("is_active")
  isVerified          Boolean   @default(false) @map("is_verified")
  onboardingCompleted Boolean   @default(false) @map("onboarding_completed")
  lastLoginAt         DateTime? @map("last_login_at")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relaciones
  clinic              Clinic                      @relation(fields: [clinicId], references: [id], onDelete: Cascade)
  appointments        Appointment[]
  passwordResetTokens ProfessionalPasswordReset[]
  userSessions        UserSession[]

  @@index([clinicId, isActive], map: "idx_professional_clinic")
  @@index([email], map: "idx_professional_email")
  @@index([role, clinicId], map: "idx_professional_role")
  @@map("professionals")
}

// ============================================================================
// ‚úÖ MODELO CONSENT FORM TEMPLATE
// ============================================================================
model ConsentFormTemplate {
  id       String @id @default(cuid())
  clinicId String @map("clinic_id")

  // Informaci√≥n b√°sica
  name        String
  description String?
  version     String @default("1.0")
  language    String @default("es")

  // Contenido del formulario
  title       String
  content     String  // HTML del formulario
  fields      String  // JSON con campos requeridos
  
  // Configuraci√≥n legal
  isActive    Boolean @default(true) @map("is_active")
  isMandatory Boolean @default(false) @map("is_mandatory")
  
  // Tipo de consentimiento
  consentType ConsentType @map("consent_type")
  
  // Validez
  validFrom   DateTime @map("valid_from")
  validUntil  DateTime? @map("valid_until")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relaciones
  clinic      Clinic          @relation(fields: [clinicId], references: [id], onDelete: Cascade)
  treatments  Treatment[]
  consents    PatientConsent[]

  @@index([clinicId, isActive], map: "idx_consent_template_clinic")
  @@index([consentType], map: "idx_consent_template_type")
  @@map("consent_form_templates")
}

// ============================================================================
// ‚úÖ MODELO PATIENT CONSENT
// ============================================================================
model PatientConsent {
  id          String @id @default(cuid())
  userId      String @map("user_id")
  treatmentId String @map("treatment_id")
  templateId  String @map("template_id")
  
  // Informaci√≥n de consentimiento
  isConsented      Boolean   @default(false) @map("is_consented")
  consentedAt      DateTime? @map("consented_at")
  digitalSignature String?   @map("digital_signature") // Base64 de la firma
  
  // Datos del formulario
  formData         String?   // JSON con respuestas del paciente
  
  // Informaci√≥n m√©dica relevante
  allergies        String?   // JSON array
  medications      String?   // JSON array
  medicalHistory   String?   @map("medical_history")
  
  // Validaci√≥n m√©dica (si aplica)
  reviewedBy       String?   @map("reviewed_by") // Professional ID
  reviewedAt       DateTime? @map("reviewed_at")
  medicalApproval  Boolean?  @map("medical_approval")
  approvalNotes    String?   @map("approval_notes")
  
  // Estados
  status           String    @default("PENDING") // PENDING, APPROVED, REJECTED, EXPIRED
  
  // Validez
  expiresAt        DateTime? @map("expires_at")
  
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relaciones
  user      User                 @relation(fields: [userId], references: [id], onDelete: Cascade)
  treatment Treatment            @relation(fields: [treatmentId], references: [id])
  template  ConsentFormTemplate @relation(fields: [templateId], references: [id])

  @@index([userId, treatmentId], map: "idx_patient_consent_user_treatment")
  @@index([status, expiresAt], map: "idx_patient_consent_validity")
  @@map("patient_consents")
}

// ============================================================================
// üíâ MODELO TREATMENT - ACTUALIZADO CON COMPLIANCE LEGAL
// ============================================================================
model Treatment {
  id       String @id @default(cuid())
  clinicId String @map("clinic_id")

  // Informaci√≥n b√°sica
  name             String
  description      String
  shortDescription String? @map("short_description")
  category         String // facial, corporal, depilacion, etc.
  subcategory      String? // limpieza, hidratacion, etc.

  // ‚úÖ NUEVA CLASIFICACI√ìN LEGAL
  riskLevel                TreatmentRiskLevel @default(LOW) @map("risk_level")
  requiresConsultation     Boolean            @default(false) @map("requires_consultation")
  requiresMedicalStaff     Boolean            @default(false) @map("requires_medical_staff")
  consentType              ConsentType        @default(SIMPLE) @map("consent_type")
  regulatoryCategory       String?            @map("regulatory_category") // SANITARIO, ESTETICO, BIENESTAR
  
  // ‚úÖ CONFIGURACI√ìN POR COMUNIDAD AUT√ìNOMA
  regionalRequirements     String?            @map("regional_requirements") // JSON con requisitos por CCAA
  
  // ‚úÖ INFORMACI√ìN LEGAL DETALLADA
  minimumAge               Int?               @map("minimum_age")
  contraindications        String?            // JSON array de contraindicaciones
  sideEffects             String?            @map("side_effects") // JSON array
  recoveryTime            String?            @map("recovery_time") // "0-24h", "1-3 d√≠as"
  followUpRequired        Boolean            @default(false) @map("follow_up_required")
  
  // ‚úÖ CONSENTIMIENTO INFORMADO
  consentFormRequired     Boolean            @default(false) @map("consent_form_required")
  consentFormTemplateId   String?            @map("consent_form_template_id")
  digitalSignatureRequired Boolean           @default(false) @map("digital_signature_required")
  
  // ‚úÖ CONFIGURACI√ìN DE RESERVA
  appointmentType         AppointmentType    @default(DIRECT) @map("appointment_type")
  consultationDuration    Int?               @map("consultation_duration") // minutos
  allowSameDayConsultation Boolean           @default(true) @map("allow_same_day_consultation")
  
  // ‚úÖ PROFESIONALES AUTORIZADOS
  authorizedProfessionalTypes String?        @map("authorized_professional_types") // JSON array
  requiresSpecialization  Boolean            @default(false) @map("requires_specialization")

  // Duraci√≥n y precios
  durationMinutes Int    @map("duration_minutes")
  price           Float
  vipPrice        Float? @map("vip_price")
  preparationTime Int    @default(0) @map("preparation_time")

  // Configuraci√≥n visual
  iconName String  @map("icon_name")
  color    String?
  imageUrl String? @map("image_url")
  gallery  String? // JSON array de URLs de im√°genes

  // Configuraci√≥n de negocio
  isVipExclusive       Boolean @default(false) @map("is_vip_exclusive")
  maxSessionsPerMonth  Int?    @map("max_sessions_per_month")
  beautyPointsEarned   Int     @default(10) @map("beauty_points_earned")

  // Estados
  isActive   Boolean @default(true) @map("is_active")
  isFeatured Boolean @default(false) @map("is_featured")
  isPopular  Boolean @default(false) @map("is_popular")
  isNew      Boolean @default(false) @map("is_new")

  // Metadata
  tags           String? // JSON array de tags
  seoTitle       String? @map("seo_title")
  seoDescription String? @map("seo_description")
  sortOrder      Int     @default(0) @map("sort_order")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relaciones
  clinic               Clinic               @relation(fields: [clinicId], references: [id], onDelete: Cascade)
  appointments         Appointment[]
  consentFormTemplate  ConsentFormTemplate? @relation(fields: [consentFormTemplateId], references: [id])
  patientConsents      PatientConsent[]

  @@index([clinicId, isActive], map: "idx_treatment_clinic")
  @@index([category, isActive], map: "idx_treatment_category")
  @@index([riskLevel, requiresConsultation], map: "idx_treatment_legal")
  @@index([isVipExclusive, isFeatured], map: "idx_treatment_special")
  @@map("treatments")
}

// ============================================================================
// üìÖ MODELO APPOINTMENT - ACTUALIZADO PARA LEGAL COMPLIANCE
// ============================================================================
model Appointment {
  id String @id @default(cuid())

  // Referencias principales
  userId         String @map("user_id")
  clinicId       String @map("clinic_id")
  professionalId String @map("professional_id")
  treatmentId    String @map("treatment_id")

  // ‚úÖ NUEVA INFORMACI√ìN LEGAL
  appointmentType      AppointmentType @default(DIRECT) @map("appointment_type")
  isConsultationOnly   Boolean         @default(false) @map("is_consultation_only")
  consultationRequired Boolean         @default(false) @map("consultation_required")
  consentStatus        String?         @map("consent_status") // PENDING, COMPLETED, NOT_REQUIRED
  consentFormId        String?         @map("consent_form_id")
  
  // ‚úÖ VALIDACI√ìN M√âDICA
  medicalClearance     Boolean?        @map("medical_clearance")
  clearanceProvidedBy  String?         @map("clearance_provided_by") // Professional ID
  clearanceNotes       String?         @map("clearance_notes")
  clearanceDate        DateTime?       @map("clearance_date")

  // Programaci√≥n
  scheduledDate DateTime @map("scheduled_date")
  scheduledTime DateTime @map("scheduled_time")
  endTime       DateTime @map("end_time")
  timezone      String   @default("Europe/Madrid")

  // Configuraci√≥n
  durationMinutes Int    @map("duration_minutes")
  status          String @default("PENDING") // PENDING, CONFIRMED, IN_PROGRESS, COMPLETED, CANCELLED, NO_SHOW
  priority        String @default("NORMAL") // LOW, NORMAL, HIGH, URGENT

  // Informaci√≥n adicional
  notes             String?
  professionalNotes String? @map("professional_notes")
  cancelReason      String? @map("cancel_reason")
  rescheduleReason  String? @map("reschedule_reason")

  // Facturaci√≥n y puntos
  originalPrice      Float @map("original_price")
  finalPrice         Float @map("final_price")
  discountApplied    Float @default(0) @map("discount_applied")
  beautyPointsEarned Int   @default(0) @map("beauty_points_earned")
  beautyPointsUsed   Int   @default(0) @map("beauty_points_used")

  // Recordatorios y notificaciones
  reminderSent     Boolean @default(false) @map("reminder_sent")
  confirmationSent Boolean @default(false) @map("confirmation_sent")
  followUpSent     Boolean @default(false) @map("follow_up_sent")

  // Metadata
  bookingSource String  @default("APP") // APP, WEB, PHONE, WALK_IN
  isFirstVisit  Boolean @default(false) @map("is_first_visit")

  // Timestamps
  confirmedAt DateTime? @map("confirmed_at")
  startedAt   DateTime? @map("started_at")
  completedAt DateTime? @map("completed_at")
  cancelledAt DateTime? @map("cancelled_at")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  // Relaciones
  user              User               @relation(fields: [userId], references: [id], onDelete: Cascade)
  clinic            Clinic             @relation(fields: [clinicId], references: [id], onDelete: Cascade)
  professional      Professional       @relation(fields: [professionalId], references: [id], onDelete: Cascade)
  treatment         Treatment          @relation(fields: [treatmentId], references: [id], onDelete: Cascade)
  rewardRedemptions RewardRedemption[]
  offerRedemptions  OfferRedemption[]

  @@index([userId, status], map: "idx_appointment_user")
  @@index([clinicId, scheduledDate], map: "idx_appointment_clinic_date")
  @@index([professionalId, scheduledDate], map: "idx_appointment_professional")
  @@index([status, scheduledDate], map: "idx_appointment_status")
  @@index([appointmentType, consultationRequired], map: "idx_appointment_legal")
  @@map("appointments")
}

// ============================================================================
// RESTO DE MODELOS EXISTENTES (sin cambios)
// ============================================================================

// üîê TOKENS DE RESET PARA PROFESIONALES
model ProfessionalPasswordReset {
  id             String   @id @default(cuid())
  professionalId String   @map("professional_id")
  token          String   @unique
  expiresAt      DateTime @map("expires_at")
  used           Boolean  @default(false)
  createdAt      DateTime @default(now()) @map("created_at")

  professional Professional @relation(fields: [professionalId], references: [id], onDelete: Cascade)

  @@map("professional_password_resets")
}

// üîê TOKENS DE RESET PARA USUARIOS
model PasswordResetToken {
  id        String   @id @default(cuid())
  userId    String   @map("user_id")
  token     String   @unique
  expiresAt DateTime @map("expires_at")
  used      Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("password_reset_tokens")
}

// ‚ú® VIP SUBSCRIPTION
model VipSubscription {
  id       String @id @default(cuid())
  userId   String @map("user_id")
  clinicId String @map("clinic_id")

  // Stripe integration
  stripeSubscriptionId String @unique @map("stripe_subscription_id")
  stripeCustomerId     String @map("stripe_customer_id")
  stripePriceId        String @map("stripe_price_id")

  // Configuraci√≥n del plan
  planType String @map("plan_type") // MONTHLY, QUARTERLY, YEARLY
  planName String @map("plan_name") // "VIP Gold", "VIP Platinum"
  status   String @default("ACTIVE") // ACTIVE, CANCELED, PAST_DUE, INCOMPLETE, TRIALING

  // Precios
  price    Float // Precio en EUR
  currency String @default("EUR")
  discount Float  @default(0) // Descuento aplicado

  // Per√≠odos
  currentPeriodStart DateTime  @map("current_period_start")
  currentPeriodEnd   DateTime  @map("current_period_end")
  trialStart         DateTime? @map("trial_start")
  trialEnd           DateTime? @map("trial_end")

  // Configuraci√≥n de cancelaci√≥n
  cancelAtPeriodEnd Boolean   @default(false) @map("cancel_at_period_end")
  canceledAt        DateTime? @map("canceled_at")
  cancelReason      String?   @map("cancel_reason")

  // Beneficios y uso
  monthlyTreatments  Int     @default(2) @map("monthly_treatments") // Tratamientos incluidos
  usedTreatments     Int     @default(0) @map("used_treatments")
  discountPercentage Int     @default(20) @map("discount_percentage") // % descuento adicional
  priorityBooking    Boolean @default(true) @map("priority_booking")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relaciones
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, status], map: "idx_user_subscription_status")
  @@index([status, currentPeriodEnd], map: "idx_subscription_expiry")
  @@index([stripeSubscriptionId], map: "idx_stripe_subscription")
  @@index([clinicId, status], map: "idx_clinic_subscriptions")
  @@map("vip_subscriptions")
}

// üéÅ MODELO OFFERS
model Offer {
  id       String @id @default(cuid())
  clinicId String @map("clinic_id")

  // Informaci√≥n b√°sica
  title            String
  description      String
  shortDescription String? @map("short_description")
  terms            String? // T√©rminos y condiciones

  // Configuraci√≥n de descuento
  discountType  String @default("PERCENTAGE") // PERCENTAGE, FIXED_AMOUNT, FREE_TREATMENT, BUY_ONE_GET_ONE
  discountValue Float // Porcentaje o monto fijo
  originalPrice Float? @map("original_price")
  finalPrice    Float? @map("final_price")
  minPurchase   Float? @map("min_purchase") // Compra m√≠nima requerida

  // Validez temporal
  validFrom  DateTime @map("valid_from")
  validUntil DateTime @map("valid_until")

  // Targeting y segmentaci√≥n
  targetAudience    String  @default("ALL") @map("target_audience") // ALL, VIP, NEW_CUSTOMERS, RETURNING, BIRTHDAY
  minAge            Int?    @map("min_age")
  maxAge            Int?    @map("max_age")
  genderTarget      String? @map("gender_target") // F, M, ALL
  loyaltyTierTarget String? @map("loyalty_tier_target") // BRONZE, SILVER, GOLD, DIAMOND

  // Tratamientos aplicables
  treatmentIds String @default("[]") @map("treatment_ids") // JSON array de IDs
  categoryIds  String @default("[]") @map("category_ids") // JSON array de categor√≠as

  // L√≠mites de uso
  maxUses        Int? @map("max_uses") // M√°ximo total de usos
  maxUsesPerUser Int  @default(1) @map("max_uses_per_user")
  currentUses    Int  @default(0) @map("current_uses")

  // Configuraci√≥n visual y marketing
  imageUrl        String? @map("image_url")
  backgroundColor String? @map("background_color")
  textColor       String? @map("text_color")
  priority        Int     @default(1) // 1=alta, 2=media, 3=baja
  category        String  @default("GENERAL") // GENERAL, SEASONAL, VIP, LOYALTY, BIRTHDAY

  // Configuraci√≥n de notificaciones
  sendNotification     Boolean @default(true) @map("send_notification")
  notificationSchedule String? @map("notification_schedule") // JSON con horarios

  // Estados
  isActive   Boolean @default(true) @map("is_active")
  isFeatured Boolean @default(false) @map("is_featured")
  autoApply  Boolean @default(false) @map("auto_apply") // Se aplica autom√°ticamente

  // Metadata
  code String? @unique // C√≥digo promocional opcional
  tags String? // JSON array de tags

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relaciones
  clinic           Clinic            @relation(fields: [clinicId], references: [id], onDelete: Cascade)
  offerRedemptions OfferRedemption[]

  @@index([clinicId, isActive], map: "idx_clinic_active_offers")
  @@index([validFrom, validUntil], map: "idx_offer_validity")
  @@index([targetAudience, category], map: "idx_offer_targeting")
  @@index([code], map: "idx_offer_code")
  @@map("offers")
}

// üéÅ REDEMPTION DE OFERTAS
model OfferRedemption {
  id            String  @id @default(cuid())
  offerId       String  @map("offer_id")
  userId        String  @map("user_id")
  appointmentId String? @map("appointment_id")

  // Informaci√≥n del canje
  redeemedAt      DateTime @default(now()) @map("redeemed_at")
  originalPrice   Float    @map("original_price")
  discountApplied Float    @map("discount_applied")
  finalPrice      Float    @map("final_price")

  // Estados y validez
  status    String    @default("ACTIVE") // ACTIVE, USED, EXPIRED, CANCELLED
  code      String    @unique // C√≥digo √∫nico del cup√≥n
  usedAt    DateTime? @map("used_at")
  expiresAt DateTime  @map("expires_at")

  // Metadata
  notes         String?
  usageLocation String? @map("usage_location") // APP, WEB, IN_PERSON

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relaciones
  offer       Offer        @relation(fields: [offerId], references: [id], onDelete: Cascade)
  user        User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  appointment Appointment? @relation(fields: [appointmentId], references: [id], onDelete: SetNull)

  @@index([userId, status], map: "idx_user_offer_redemptions")
  @@index([offerId, status], map: "idx_offer_usage")
  @@index([expiresAt], map: "idx_offer_expiry")
  @@map("offer_redemptions")
}

// üîî NOTIFICATIONLOG
model NotificationLog {
  id       String  @id @default(cuid())
  userId   String  @map("user_id")
  clinicId String? @map("clinic_id")

  // Tipo y contenido
  type     String // appointment, wellness, promotion, general, offer, reminder
  category String? // marketing, transactional, reminder
  title    String
  body     String

  // Env√≠o y entrega
  sentAt    DateTime @default(now()) @map("sent_at")
  delivered Boolean  @default(false)
  opened    Boolean  @default(false)
  clicked   Boolean  @default(false)

  // Configuraci√≥n t√©cnica
  channel   String  @default("PUSH") // PUSH, EMAIL, SMS
  data      String? // JSON adicional
  pushToken String? @map("push_token")
  platform  String? // ios, android

  // Errores y reintentos
  error      String? // Error si falla el env√≠o
  retryCount Int     @default(0) @map("retry_count")

  // Metadata
  campaignId String? @map("campaign_id") // Para campa√±as masivas

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relaciones
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, type], map: "idx_user_notification_type")
  @@index([sentAt], map: "idx_notification_date")
  @@index([delivered, opened], map: "idx_notification_status")
  @@index([clinicId, type], map: "idx_clinic_notifications")
  @@map("notification_logs")
}

// üéØ SISTEMA DE INVITACIONES
model Invitation {
  id           String  @id @default(cuid())
  inviterId    String  @map("inviter_id")
  clinicId     String  @map("clinic_id")
  inviteeEmail String  @map("invitee_email")
  inviteeName  String? @map("invitee_name")

  // Estado y recompensas
  status       String @default("PENDING") // PENDING, ACCEPTED, EXPIRED, CANCELLED
  rewardPoints Int    @default(50) @map("reward_points")
  bonusPoints  Int    @default(0) @map("bonus_points") // Puntos extra por campa√±as

  // Validez
  expiresAt  DateTime  @map("expires_at")
  acceptedAt DateTime? @map("accepted_at")

  // Metadata
  message    String? // Mensaje personalizado
  inviteCode String  @unique @map("invite_code")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relaciones
  inviter User @relation(fields: [inviterId], references: [id], onDelete: Cascade)

  @@index([inviterId, status], map: "idx_inviter_status")
  @@index([inviteCode], map: "idx_invite_code")
  @@index([expiresAt], map: "idx_invitation_expiry")
  @@map("invitations")
}

// üí° WELLNESS TIPS
model WellnessTip {
  id       String  @id @default(cuid())
  clinicId String? @map("clinic_id")

  title    String
  content  String
  excerpt  String? // Resumen corto
  category String // skincare, nutrition, lifestyle, treatments

  // Targeting
  targetAge    String? @map("target_age") // "20-30", "30-40", etc.
  targetGender String? @map("target_gender") // F, M, ALL
  seasonality  String? // JSON para estacionalidad

  // Visual
  iconName String  @map("icon_name")
  imageUrl String? @map("image_url")
  color    String? // Color hex

  // Configuraci√≥n
  isActive   Boolean @default(true) @map("is_active")
  isFeatured Boolean @default(false) @map("is_featured")
  priority   Int     @default(1) // Orden de aparici√≥n

  // Engagement
  views  Int @default(0)
  likes  Int @default(0)
  shares Int @default(0)

  // Metadata
  tags       String? // JSON array de tags
  authorName String? @map("author_name")
  sourceUrl  String? @map("source_url")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@index([clinicId, isActive], map: "idx_wellness_clinic")
  @@index([category, isActive], map: "idx_wellness_category")
  @@index([isFeatured, priority], map: "idx_wellness_featured")
  @@map("wellness_tips")
}

// üí∞ STRIPE INTEGRATION - CUSTOMER MANAGEMENT
model StripeCustomer {
  id               String  @id @default(cuid())
  userId           String  @unique @map("user_id")
  stripeCustomerId String  @unique @map("stripe_customer_id")
  email            String
  name             String?
  phone            String?
  address          String? // JSON con direcci√≥n completa
  taxId            String? @map("tax_id") // NIF/CIF para facturaci√≥n

  // Estados
  isDeleted Boolean   @default(false) @map("is_deleted")
  deletedAt DateTime? @map("deleted_at")

  // Metadata
  metadata String? // JSON adicional de Stripe

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relaciones
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([stripeCustomerId], map: "idx_stripe_customer")
  @@map("stripe_customers")
}

// üí≥ PAYMENT METHODS
model PaymentMethod {
  id             String @id @default(cuid())
  userId         String @map("user_id")
  stripeMethodId String @unique @map("stripe_method_id")

  // Informaci√≥n de la tarjeta
  type        String // card, sepa_debit, ideal, etc.
  last4       String?
  brand       String? // visa, mastercard, amex
  expiryMonth Int?    @map("expiry_month")
  expiryYear  Int?    @map("expiry_year")
  funding     String? // credit, debit, prepaid
  country     String?

  // Configuraci√≥n
  isDefault Boolean @default(false) @map("is_default")
  nickname  String? // Nombre personalizado por el usuario

  // Estados
  isActive   Boolean   @default(true) @map("is_active")
  isVerified Boolean   @default(false) @map("is_verified")
  deletedAt  DateTime? @map("deleted_at")

  // Metadata de Stripe
  fingerprint String?
  metadata    String? // JSON adicional

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relaciones
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, isDefault], map: "idx_user_default_payment")
  @@index([userId, isActive], map: "idx_user_active_payments")
  @@map("payment_methods")
}

// üí∞ PAYMENTS
model Payment {
  id       String  @id @default(cuid())
  userId   String  @map("user_id")
  clinicId String? @map("clinic_id")

  // IDs de Stripe
  stripeInvoiceId       String? @map("stripe_invoice_id")
  stripePaymentIntentId String? @map("stripe_payment_intent_id")
  stripeSubscriptionId  String? @map("stripe_subscription_id")
  stripeChargeId        String? @map("stripe_charge_id")

  // Informaci√≥n del pago
  amount      Float // En EUR
  currency    String  @default("EUR")
  status      String // SUCCESS, FAILED, PENDING, REFUNDED, PARTIALLY_REFUNDED
  description String?

  // Tipo de pago
  paymentType String  @default("SUBSCRIPTION") // SUBSCRIPTION, TREATMENT, TOPUP, PRODUCT
  relatedId   String? @map("related_id") // ID del appointment, subscription, etc.

  // Informaci√≥n de facturaci√≥n
  customerName  String? @map("customer_name")
  customerEmail String? @map("customer_email")
  invoiceNumber String? @map("invoice_number")
  taxAmount     Float?  @map("tax_amount")

  // Errores y reembolsos
  failureReason String? @map("failure_reason")
  refundAmount  Float?  @map("refund_amount")
  refundReason  String? @map("refund_reason")

  // Timestamps
  paidAt     DateTime? @map("paid_at")
  refundedAt DateTime? @map("refunded_at")
  failedAt   DateTime? @map("failed_at")

  // Metadata
  metadata   String? // JSON adicional
  receiptUrl String? @map("receipt_url")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relaciones
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, status], map: "idx_user_payments")
  @@index([stripeInvoiceId], map: "idx_stripe_invoice")
  @@index([clinicId, paymentType], map: "idx_clinic_payments")
  @@index([status, paidAt], map: "idx_payment_status")
  @@map("payments")
}

// üîó WEBHOOK EVENTS
model WebhookEvent {
  id            String @id @default(cuid())
  stripeEventId String @unique @map("stripe_event_id")
  eventType     String @map("event_type")

  // Procesamiento
  processed  Boolean @default(false)
  error      String?
  retryCount Int     @default(0) @map("retry_count")

  // Datos del evento
  data       String // JSON del evento completo
  livemode   Boolean @default(false)
  apiVersion String? @map("api_version")

  // Timestamps
  eventCreatedAt DateTime  @map("event_created_at") // Timestamp del evento en Stripe
  processedAt    DateTime? @map("processed_at")
  createdAt      DateTime  @default(now()) @map("created_at")

  @@index([stripeEventId], map: "idx_stripe_event")
  @@index([eventType, processed], map: "idx_webhook_processing")
  @@index([createdAt], map: "idx_webhook_cleanup")
  @@map("webhook_events")
}

// üèÜ REWARD SYSTEM
model RewardTemplate {
  id       String @id @default(cuid())
  clinicId String @map("clinic_id")

  // Informaci√≥n b√°sica
  name             String
  description      String
  shortDescription String? @map("short_description")
  type             String // DISCOUNT, UPGRADE, FREE_SERVICE, PRODUCT, POINTS_MULTIPLIER

  // Configuraci√≥n del valor
  value      Float // Valor del descuento o costo del servicio
  valueType  String @default("PERCENTAGE") @map("value_type") // PERCENTAGE, FIXED, POINTS
  pointsCost Int    @map("points_cost")
  marginCost Float  @map("margin_cost") // Costo real para la cl√≠nica

  // Restricciones y condiciones
  conditions      String? // JSON con condiciones especiales
  validityDays    Int     @default(30) @map("validity_days")
  maxUsesPerMonth Int     @default(10) @map("max_uses_per_month")
  maxUsesPerUser  Int     @default(1) @map("max_uses_per_user")
  minLoyaltyScore Int     @default(0) @map("min_loyalty_score")
  targetUserType  String? @map("target_user_type") // VIP, FREQUENT, NEW, ALL

  // Tratamientos aplicables
  applicableTreatments String? @map("applicable_treatments") // JSON array de IDs
  excludedTreatments   String? @map("excluded_treatments") // JSON array de IDs

  // Visual y marketing
  iconName String  @map("icon_name")
  color    String? // Color hex
  imageUrl String? @map("image_url")
  badge    String? // Texto del badge (ej: "POPULAR", "NEW")

  // Analytics y optimizaci√≥n
  popularity     Float   @default(0) // Score basado en uso
  conversionRate Float   @default(0) @map("conversion_rate")
  seasonality    String? // JSON con datos estacionales

  // Estados
  isActive   Boolean @default(true) @map("is_active")
  isFeatured Boolean @default(false) @map("is_featured")
  isLimited  Boolean @default(false) @map("is_limited") // Oferta por tiempo limitado

  // Configuraci√≥n avanzada
  autoAssign   Boolean @default(false) @map("auto_assign") // Se asigna autom√°ticamente
  stackable    Boolean @default(false) // Se puede combinar con otras ofertas
  transferable Boolean @default(false) // Se puede regalar

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relaciones
  clinic      Clinic             @relation(fields: [clinicId], references: [id], onDelete: Cascade)
  redemptions RewardRedemption[]

  @@index([clinicId, isActive], map: "idx_clinic_active_rewards")
  @@index([pointsCost, isActive], map: "idx_reward_cost")
  @@index([isFeatured, popularity], map: "idx_reward_featured")
  @@map("reward_templates")
}

// üéÅ REWARD REDEMPTIONS
model RewardRedemption {
  id            String  @id @default(cuid())
  userId        String  @map("user_id")
  templateId    String  @map("template_id")
  appointmentId String? @map("appointment_id")

  // Informaci√≥n del canje
  code           String @unique
  status         String @default("ACTIVE") // ACTIVE, USED, EXPIRED, CANCELLED, TRANSFERRED
  pointsUsed     Int    @map("points_used")
  discountAmount Float? @map("discount_amount")

  // Validez y uso
  expiresAt DateTime  @map("expires_at")
  usedAt    DateTime? @map("used_at")

  // Transferencia (si aplica)
  transferredTo String?   @map("transferred_to") // userId del destinatario
  transferredAt DateTime? @map("transferred_at")
  transferCode  String?   @map("transfer_code")

  // Metadata
  notes         String?
  usageLocation String? @map("usage_location") // APP, WEB, IN_PERSON

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relaciones
  user        User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  template    RewardTemplate @relation(fields: [templateId], references: [id])
  appointment Appointment?   @relation(fields: [appointmentId], references: [id])

  @@index([userId, status], map: "idx_user_reward_redemptions")
  @@index([templateId], map: "idx_template_redemptions")
  @@index([expiresAt], map: "idx_reward_expiry")
  @@index([code], map: "idx_reward_code")
  @@map("reward_redemptions")
}

// üìä REWARD ANALYTICS
model RewardAnalytics {
  id         String @id @default(cuid())
  templateId String @map("template_id")
  userId     String @map("user_id")
  clinicId   String @map("clinic_id")

  // Evento y contexto
  eventType String  @map("event_type") // VIEW, REDEEM, USE, EXPIRE, SHARE
  metadata  String? // JSON con datos adicionales

  // Informaci√≥n del usuario en el momento
  userLoyaltyScore Int     @map("user_loyalty_score")
  userTier         String  @map("user_tier") // BRONZE, SILVER, GOLD, DIAMOND
  userTotalPoints  Int     @map("user_total_points")
  userVipStatus    Boolean @map("user_vip_status")

  // Contexto temporal
  dayOfWeek Int     @map("day_of_week") // 1-7
  hourOfDay Int     @map("hour_of_day") // 0-23
  isWeekend Boolean @map("is_weekend")

  // Datos de conversi√≥n
  conversionValue Float? @map("conversion_value") // Valor monetario si aplica
  sessionDuration Int?   @map("session_duration") // Segundos en la app

  createdAt DateTime @default(now()) @map("created_at")

  @@index([templateId, eventType], map: "idx_template_analytics")
  @@index([userId, createdAt], map: "idx_user_analytics")
  @@index([clinicId, eventType], map: "idx_clinic_analytics")
  @@index([createdAt], map: "idx_analytics_date")
  @@map("reward_analytics")
}

// üì± SISTEMA DE SESIONES Y SEGURIDAD
model UserSession {
  id             String  @id @default(cuid())
  userId         String? @map("user_id")
  professionalId String? @map("professional_id")
  sessionType    String  @map("session_type") // USER, PROFESSIONAL, CLINIC_ADMIN

  // Informaci√≥n de la sesi√≥n
  token        String   @unique
  refreshToken String?  @map("refresh_token")
  expiresAt    DateTime @map("expires_at")

  // Informaci√≥n del dispositivo
  deviceId   String? @map("device_id")
  deviceType String? @map("device_type") // mobile, tablet, desktop
  deviceName String? @map("device_name")
  platform   String? // ios, android, web
  appVersion String? @map("app_version")

  // Informaci√≥n de red
  ipAddress String? @map("ip_address")
  userAgent String? @map("user_agent")
  location  String? // JSON con datos de geolocalizaci√≥n

  // Estados
  isActive  Boolean @default(true) @map("is_active")
  isRevoked Boolean @default(false) @map("is_revoked")

  // Actividad
  lastActivity  DateTime  @default(now()) @map("last_activity")
  revokedAt     DateTime? @map("revoked_at")
  revokedReason String?   @map("revoked_reason")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relaciones
  user         User?         @relation(fields: [userId], references: [id], onDelete: Cascade)
  professional Professional? @relation(fields: [professionalId], references: [id], onDelete: Cascade)

  @@index([token], map: "idx_session_token")
  @@index([userId, isActive], map: "idx_user_sessions")
  @@index([professionalId, isActive], map: "idx_professional_sessions")
  @@index([expiresAt], map: "idx_session_expiry")
  @@map("user_sessions")
}

// üõ°Ô∏è AUDIT LOG
model AuditLog {
  id String @id @default(cuid())

  // Actor (quien realiz√≥ la acci√≥n)
  userId         String? @map("user_id")
  professionalId String? @map("professional_id")
  clinicId       String? @map("clinic_id")
  actorType      String  @map("actor_type") // USER, PROFESSIONAL, CLINIC_ADMIN, SYSTEM

  // Acci√≥n realizada
  action     String // CREATE, UPDATE, DELETE, LOGIN, LOGOUT, etc.
  resource   String // USER, APPOINTMENT, PAYMENT, etc.
  resourceId String? @map("resource_id")

  // Detalles de la acci√≥n
  description String?
  changes     String? // JSON con cambios realizados
  oldValues   String? @map("old_values") // JSON con valores anteriores
  newValues   String? @map("new_values") // JSON con valores nuevos

  // Contexto t√©cnico
  ipAddress String? @map("ip_address")
  userAgent String? @map("user_agent")
  platform  String?

  // Metadatos
  severity String  @default("INFO") // DEBUG, INFO, WARN, ERROR, CRITICAL
  category String? // SECURITY, BUSINESS, SYSTEM

  createdAt DateTime @default(now()) @map("created_at")

  @@index([userId, action], map: "idx_audit_user_action")
  @@index([professionalId, action], map: "idx_audit_professional_action")
  @@index([clinicId, action], map: "idx_audit_clinic_action")
  @@index([resource, resourceId], map: "idx_audit_resource")
  @@index([createdAt], map: "idx_audit_date")
  @@index([severity, category], map: "idx_audit_severity")
  @@map("audit_logs")
}